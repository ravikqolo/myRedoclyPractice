---
  openapi: 3.0.1
  info:
    title: Qolo API
    version: v1
    description: Qolo API Documentation site
    x-logo:
      url: https://devapi2.qolopay.com/qolo_logo.png
      backgroundColor: "#FFFFFF"
      altText: Qolo API
  servers:
  - url: https://devapi2.qolopay.com
  paths:
    "/api/{version}/account_instruments":
      post:
        tags:
        - AccountInstruments
        summary: Create AccountInstrument
        description: Create a AccountInstrument for account on Qolo platform.
        operationId: CreateAccountInstrument
        parameters:
        - name: version
          in: path
          required: true
          schema:
            type: string
        requestBody:
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CreateAccountInstrumentRequest"
        responses:
          '201':
            description: Returns the newly created AccountInstrument
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/AccountInstrumentDTO"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Account not found
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
    "/api/{version}/account_instruments/{account_instrument_guid}":
      get:
        tags:
        - AccountInstruments
        summary: Retrieve AccountInstrument
        description: Use this end point to retrieve or find a specific account instrument
          by guid
        operationId: GetAccountInstrumentById
        parameters:
        - name: account_instrument_guid
          in: path
          description: ''
          required: true
          schema:
            type: string
            description: ''
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
        responses:
          '200':
            description: Returns the Account Instrument with account details
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/AccountInstrumentDTO"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Account Instrument not found
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
    "/api/{version}/accounts":
      get:
        tags:
        - Accounts
        summary: Search Accounts
        description: Returns one or more accounts based on the search criteria.
        operationId: SearchAccount
        parameters:
        - name: person_guid
          in: query
          description: person guid
          schema:
            type: string
            description: person guid
            format: uuid
        - name: wallet_guid
          in: query
          description: wallet guid
          schema:
            type: string
            description: wallet guid
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
        responses:
          '200':
            description: Returns the list of accounts
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/AccountDTOSearchResponse"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
      post:
        tags:
        - Accounts
        summary: Create Account
        description: Create a account for person on Qolo platform by passing wallet_guid
          or wallet id.
        operationId: CreateAccount
        parameters:
        - name: version
          in: path
          required: true
          schema:
            type: string
        requestBody:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CreateAccountRequest"
        responses:
          '201':
            description: Returns the newly created Account
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/AccountDTO"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Wallet not found
          '500':
            description: Server Error
    "/api/{version}/accounts/{account_guid}":
      get:
        tags:
        - Accounts
        summary: Retrieve account
        description: Use this end point to retrieve or find a specific account based
          on the Account GUID.
        operationId: GetAccountById
        parameters:
        - name: account_guid
          in: path
          description: ''
          required: true
          schema:
            type: string
            description: ''
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
        responses:
          '200':
            description: Returns the Account with balance details
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/AccountDTO"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Account not found
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
      put:
        tags:
        - Accounts
        summary: Update Account
        description: "Update Account\r\nFields supported:\r\n<li>account_name</li>"
        operationId: UpdateAccount
        parameters:
        - name: account_guid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
        requestBody:
          content:
            application/json-patch+json:
              schema:
                "$ref": "#/components/schemas/UpdateAccountInfoRequest"
            application/json:
              schema:
                "$ref": "#/components/schemas/UpdateAccountInfoRequest"
            text/json:
              schema:
                "$ref": "#/components/schemas/UpdateAccountInfoRequest"
            application/*+json:
              schema:
                "$ref": "#/components/schemas/UpdateAccountInfoRequest"
        responses:
          '200':
            description: Returns the updated Account
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/AccountDTO"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Not found
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
    "/api/{version}/accounts/{account_guid}/status":
      post:
        tags:
        - Accounts
        summary: Status Account
        description: Call this API end point to change the status of an account, identified
          by account guid
        operationId: StatusAccount
        parameters:
        - name: account_guid
          in: path
          description: account guid
          required: true
          schema:
            type: string
            description: account guid
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
        requestBody:
          description: account status request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AccountStatusUser"
        responses:
          '200':
            description: Returns the account details
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/AccountDTO"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Account not found
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
    "/api/{version}/accounts/AdjustBalance":
      post:
        tags:
        - Accounts
        summary: Adjust Balance
        description: "Adjust Balance API fetches the program funding account and adjusts
          balance for an account_guid and requestcode provided . \r\nThis API will be
          used by the portal"
        operationId: AdjustBalance
        parameters:
        - name: version
          in: path
          required: true
          schema:
            type: string
        requestBody:
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AdjustBalanceRequest"
        responses:
          '201':
            description: Returns the newly created Wallet
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/AdjustBalanceResponse"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Wallet not found
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
    "/api/{version}/accounts/sharedaccount":
      post:
        tags:
        - Accounts
        summary: Create Shared Account
        description: Share an account with a seperate person.
        operationId: CreateSharedAccount
        parameters:
        - name: version
          in: path
          required: true
          schema:
            type: string
        requestBody:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CreateSharedAccountRequest"
        responses:
          '201':
            description: Returns the newly shared Account
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/CreateSharedAccountResponse"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Wallet not found
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
    "/api/{version}/accounts/updatesharedaccount":
      post:
        tags:
        - Accounts
        summary: Update Shared Account
        description: Update Shared Account
        operationId: UpdateSharedAccount
        parameters:
        - name: version
          in: path
          required: true
          schema:
            type: string
        requestBody:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UpdateSharedAccountRequest"
          required: true
        responses:
          '200':
            description: Returns updated shared information
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/AccountSharedPersonDTO"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Not found
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
    "/api/{version}/advances/{account_guid}/precalc":
      get:
        tags:
        - Advances
        summary: Advance PreCalc
        description: Advance PreCalc
        operationId: AdvancePreCalc
        parameters:
        - name: account_guid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
        requestBody:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AdvancePreCalcRequest"
        responses:
          '201':
            description: Returns the Advance PreCalc Details
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/AdvancePreCalcResponse"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Account not found
          '500':
            description: Server Error
    "/api/{version}/advances/{account_guid}":
      post:
        tags:
        - Advances
        summary: Apply Advance
        description: Apply Advance
        operationId: ApplyAdvance
        parameters:
        - name: account_guid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
        requestBody:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ApplyAdvanceRequest"
        responses:
          '201':
            description: Applies the advance associated with the request_id
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ApplyAdvanceResponse"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Account not found
          '500':
            description: Server Error
    "/api/{version}/advances/{account_guid}/cycle":
      post:
        tags:
        - Advances
        summary: Change Advance Cycle
        description: Change the cycle of the advance
        operationId: ChangeCycle
        parameters:
        - name: account_guid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
        requestBody:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ChangeAdvanceCycleRequest"
        responses:
          '201':
            description: Changes the cycle of the advance
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ChangeAdvanceCycleResponse"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Account not found
          '500':
            description: Server Error
    "/api/{version}/batchfiles":
      post:
        tags:
        - BatchFiles
        summary: Create Batchfile for Disbursement
        description: Create Batchfile with source document in base64 encoding
        operationId: Batchfiles
        parameters:
        - name: version
          in: path
          required: true
          schema:
            type: string
        requestBody:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BatchfileRequest"
        responses:
          '200':
            description: Returns batchfile_guid
          '201':
            description: Success
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/BatchfileResponse"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Report name not found
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
    "/api/{version}/batchfiles/Download":
      post:
        tags:
        - BatchFiles
        summary: Download Batchfile
        description: Download File by Batchfile and Program Guid
        operationId: DownloadBatchfile
        parameters:
        - name: version
          in: path
          required: true
          schema:
            type: string
        requestBody:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BatchfileDownloadRequest"
        responses:
          '200':
            description: Returns the batchfile as attachment
            content:
              application/json:
                schema:
                  type: string
                  format: binary
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Batchfile not found
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
    "/api/{version}/bulkorders":
      post:
        tags:
        - BulkOrder
        summary: Create Bulk Orders
        description: Create a person and a bulk order on Qolo platform. If the person
          is already created, send an existing Person GUID.
        operationId: CreateBulkOrder
        parameters:
        - name: version
          in: path
          required: true
          schema:
            type: string
        requestBody:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BulkOrderRequest"
        responses:
          '201':
            description: Returns the newly bulkorder
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/BulkOrderResponse"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Program not found
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
      get:
        tags:
        - BulkOrder
        summary: Retrieve Bulk Orders
        description: Use this end point to display bulk order details
        operationId: GetOrderDetail
        parameters:
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: start_index
          in: query
          schema:
            type: integer
            format: int32
        - name: order_guid
          in: query
          description: order guid
          schema:
            type: string
            description: order guid
            format: uuid
        - name: package_guid
          in: query
          description: package guid
          schema:
            type: string
            description: package guid
            format: uuid
        - name: person_guid
          in: query
          schema:
            type: string
            format: uuid
        - name: company_guid
          in: query
          schema:
            type: string
            format: uuid
        - name: start_search_date
          in: query
          description: start search date
          schema:
            type: string
            description: start search date
            format: date-time
        - name: end_search_date
          in: query
          description: end search date
          schema:
            type: string
            description: end search date
            format: date-time
        - name: bulk_order_status
          in: query
          description: bulk order status- PENDING,CREATED,CANCELLED,SHIPPED
          schema:
            type: string
            description: bulk order status- PENDING,CREATED,CANCELLED,SHIPPED
            nullable: true
        - name: version
          in: path
          required: true
          schema:
            type: string
        responses:
          '200':
            description: Returns the bulk order details
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/BulkOrdersSearchResponse"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Order not found
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
      put:
        tags:
        - BulkOrder
        summary: Cancel Bulk Orders
        description: This end point will allow you to cancel a bulk order on the Qolo
          platform.
        operationId: CancelBulkOrder
        parameters:
        - name: version
          in: path
          required: true
          schema:
            type: string
        requestBody:
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BulkOrderReq"
        responses:
          '200':
            description: Returns the bulk order details for the cancelled order
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/BulkOrderDetail"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
    "/api/{version}/bulkorders/CheckinBulkOrder":
      put:
        tags:
        - BulkOrder
        summary: Checkin Bulk Orders
        description: This end point will allow you to checkin a bulk order on the Qolo
          platform.
        operationId: CheckinBulkOrder
        parameters:
        - name: version
          in: path
          required: true
          schema:
            type: string
        requestBody:
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BulkOrderReq"
        responses:
          '200':
            description: Returns the updated Person
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/BulkOrderDetail"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
    "/api/{version}/bulkorders/BulkOrderSummaryByLocation":
      get:
        tags:
        - BulkOrder
        summary: Bulk Orders Summary By Location
        description: Use this end point to display inventory summary details
        operationId: GetBulkOrderSummaryByLocation
        parameters:
        - name: person_guid
          in: query
          description: person guid
          schema:
            type: string
            description: person guid
            format: uuid
        - name: company_guid
          in: query
          description: company guid
          schema:
            type: string
            description: company guid
            format: uuid
        - name: limit
          in: query
          description: limit
          schema:
            type: integer
            description: limit
            format: int32
        - name: start_index
          in: query
          description: start index
          schema:
            type: integer
            description: start index
            format: int32
            default: 1
        - name: version
          in: path
          required: true
          schema:
            type: string
        responses:
          '200':
            description: Returns the bulk order summary
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/BulkOrderSummarySearchResponse"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Order not found
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
    "/api/{version}/cards":
      get:
        tags:
        - Cards
        summary: Search Cards
        description: Retrieve list of cards based on search criteria.
        operationId: SearchCard
        parameters:
        - name: person_guid
          in: query
          description: person guid
          schema:
            type: string
            description: person guid
            format: uuid
        - name: wallet_guid
          in: query
          description: wallet guid
          schema:
            type: string
            description: wallet guid
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
        responses:
          '200':
            description: Returns the Card
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/CardDTOSearchResponse"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
      post:
        tags:
        - Cards
        summary: Create Card
        description: Create a person and a card on Qolo platform. If the person is already
          created, send an existing Person GUID.
        operationId: CreateCard
        parameters:
        - name: version
          in: path
          required: true
          schema:
            type: string
        requestBody:
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CreateCardRequest"
        responses:
          '201':
            description: Returns the newly created Card
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/CreateCardResponse"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Program not found
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
    "/api/{version}/cards/{card_proxy}":
      get:
        tags:
        - Cards
        summary: Retrieve Card
        description: Returns specific card details based on the given proxy.
        operationId: GetCardById
        parameters:
        - name: card_proxy
          in: path
          description: card proxy
          required: true
          schema:
            type: string
            description: card proxy
            nullable: true
        - name: version
          in: path
          required: true
          schema:
            type: string
        responses:
          '200':
            description: Returns the Card
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/CardDTO"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Card not found
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
    "/api/{version}/cards/{card_proxy}/fulfillmentdata":
      get:
        tags:
        - Cards
        summary: Show card fulfillment data
        description: "Returns fulfillment data for specific card if a valid identifier
          was provided.\r\nTrack1, track2, cvx2 and pin are some important fields returned
          in this API\r\nPCI DSS compliance is required to use this API."
        operationId: GetFulfillmentData
        parameters:
        - name: card_proxy
          in: path
          description: ''
          required: true
          schema:
            type: string
            description: ''
            nullable: true
        - name: version
          in: path
          required: true
          schema:
            type: string
        responses:
          '200':
            description: Returns the fulfillment data
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/EncryptedFulfillmentDetails"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Card not found
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
    "/api/{version}/cards/{card_proxy}/showpan":
      get:
        tags:
        - Cards
        summary: Show card PAN
        description: "Returns PAN, cvv and expiraton date for specific card if a valid
          identifier was provided. \r\nPCI DSS compliance is required to use this API."
        operationId: GetPANById
        parameters:
        - name: card_proxy
          in: path
          description: ''
          required: true
          schema:
            type: string
            description: ''
            nullable: true
        - name: version
          in: path
          required: true
          schema:
            type: string
        responses:
          '200':
            description: Returns the Card
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/CardDTO"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Card not found
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
    "/api/{version}/cards/assign":
      post:
        tags:
        - Cards
        summary: Assign Card
        description: Assign an instant issue or anonymous card to a Person.
        operationId: AssignCard
        parameters:
        - name: version
          in: path
          required: true
          schema:
            type: string
        requestBody:
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AssignCardDTO"
        responses:
          '200':
            description: Returns the newly assigned Card
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/AssignCardDTO"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Card not found
          '500':
            description: Server Error
    "/api/{version}/cards/{card_proxy}/activate":
      post:
        tags:
        - Cards
        summary: Activate Card
        description: Activate a newly issued card. This API must be called in response
          to an activation request by the cardholder.
        operationId: ActivateCard
        parameters:
        - name: card_proxy
          in: path
          description: ''
          required: true
          schema:
            type: string
            description: ''
            nullable: true
        - name: version
          in: path
          required: true
          schema:
            type: string
        requestBody:
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CardStatusDTO"
        responses:
          '200':
            description: Returns the card details
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/CardDTO"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Card not found
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
    "/api/{version}/cards/{card_proxy}/status":
      post:
        tags:
        - Cards
        summary: Status Card
        description: Call this API end point to change the status of a card, identified
          by card proxy.
        operationId: StatusCard
        parameters:
        - name: card_proxy
          in: path
          description: card proxy
          required: true
          schema:
            type: string
            description: card proxy
            nullable: true
        - name: version
          in: path
          required: true
          schema:
            type: string
        requestBody:
          description: card status request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CardStatusDTO"
        responses:
          '200':
            description: Returns the card details
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/CardDTO"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Card not found
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
    "/api/{version}/cards/validate":
      post:
        tags:
        - Cards
        summary: Validate Card
        description: Validate a card using card number and cvv.
        operationId: ValidateCard
        parameters:
        - name: version
          in: path
          required: true
          schema:
            type: string
        requestBody:
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ValidateCardDTO"
        responses:
          '200':
            description: Returns the card details
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/CardDTO"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Card not found
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
    "/api/{version}/cards/{card_proxy}/pin":
      post:
        tags:
        - Cards
        summary: Set PIN
        description: Call this API end point to change the PIN of a card, identified
          by card proxy.
        operationId: SetPIN
        parameters:
        - name: card_proxy
          in: path
          description: card proxy
          required: true
          schema:
            type: string
            description: card proxy
            nullable: true
        - name: version
          in: path
          required: true
          schema:
            type: string
        requestBody:
          description: card PIN request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CardPINDTO"
        responses:
          '200':
            description: Returns the card details
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/CardPINDTO"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Card not found
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
      get:
        tags:
        - Cards
        summary: Get PIN
        description: Call this API end point to get the PIN of a card, identified by
          card proxy.
        operationId: GetPIN
        parameters:
        - name: card_proxy
          in: path
          description: card proxy
          required: true
          schema:
            type: string
            description: card proxy
            nullable: true
        - name: version
          in: path
          required: true
          schema:
            type: string
        responses:
          '200':
            description: Returns the card details
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/CardPINDTO"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Card not found
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
    "/api/{version}/cards/{card_proxy}/replace":
      post:
        tags:
        - Cards
        summary: Replace Card
        description: Call this API end point to replace a card, identified by card proxy.
        operationId: ReplaceCard
        parameters:
        - name: card_proxy
          in: path
          description: card proxy
          required: true
          schema:
            type: string
            description: card proxy
            nullable: true
        - name: version
          in: path
          required: true
          schema:
            type: string
        requestBody:
          description: replace card request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ReplaceCardRequest"
        responses:
          '200':
            description: Returns the newly created Card
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ReplaceCardResponse"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Card not found
          '500':
            description: Server Error
    "/api/{version}/cards/{card_proxy}/personcardstatus":
      post:
        tags:
        - Cards
        summary: Status Person Card Status
        description: Call this API end point to change the person card status of a card,
          identified by card proxy.
        operationId: PersonCardStatus
        parameters:
        - name: card_proxy
          in: path
          description: card proxy
          required: true
          schema:
            type: string
            description: card proxy
            nullable: true
        - name: version
          in: path
          required: true
          schema:
            type: string
        requestBody:
          description: person card status request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PersonCardStatusDTO"
        responses:
          '200':
            description: Returns the card details
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/CardDTO"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Card not found
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
    "/api/{version}/cards/{card_proxy}/issuance_type":
      post:
        tags:
        - Cards
        summary: Update issuance_type
        description: Call this API end point to turn a virutal card into a plastic card,
          identified by card proxy.  Only allow Virutal to Full at this time
        operationId: IssuanceType
        parameters:
        - name: card_proxy
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: version
          in: path
          required: true
          schema:
            type: string
        requestBody:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/IssuanceTypeRequest"
        responses:
          '200':
            description: Returns the card details
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/CardDTO"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Card not found
          '500':
            description: Server Error
    "/api/{version}/companies":
      post:
        tags:
        - Companies
        summary: Create company
        description: returns new company/program created
        operationId: CreateCompany
        parameters:
        - name: version
          in: path
          required: true
          schema:
            type: string
        requestBody:
          description: create company request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CreateCompany"
        responses:
          '201':
            description: Returns the company/program created
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/CompanyProgramDTO"
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
    "/api/{version}/companies/{company_guid}":
      put:
        tags:
        - Companies
        summary: Update company details
        description: returns updated company
        operationId: UpdateCompanyById
        parameters:
        - name: company_guid
          in: path
          description: company guid
          required: true
          schema:
            type: string
            description: company guid
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
        requestBody:
          description: update company request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UpdateCompany"
        responses:
          '200':
            description: Returns the updated company
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/CompanyDTO"
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
    "/api/{version}/disbursements":
      post:
        tags:
        - Disbursements
        summary: Create Disbursement
        description: Create a new Disbursement request to create the person, account,
          instrument and move funds.
        operationId: Disbursements
        parameters:
        - name: version
          in: path
          required: true
          schema:
            type: string
        requestBody:
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DisbursementDTO"
        responses:
          '201':
            description: Request created and queued for processing
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/DisbursementResponse"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Account not found
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
    "/api/{version}/disbursements/payoutoptions":
      get:
        tags:
        - Disbursements
        summary: PayOut Options
        description: Get the Disbursement PayOut options by program_guid
        operationId: GetPayOutOptions
        parameters:
        - name: program_guid
          in: query
          description: ''
          schema:
            type: string
            description: ''
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
        responses:
          '200':
            description: Returns the list of disbursement payout options
            content:
              application/json:
                schema:
                  type: array
                  items:
                    type: string
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Program not found
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
    "/api/{version}/disbursements/payoutpreference":
      get:
        tags:
        - Disbursements
        summary: Get PayOut Preference
        description: Get the Disbursement PayOut options by person_guid
        operationId: GetPayOutPreference
        parameters:
        - name: person_guid
          in: query
          description: ''
          schema:
            type: string
            description: ''
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
        responses:
          '200':
            description: Returns the list of disbursement payout options
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/DisbursementPayoutPreference"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Program not found
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
      put:
        tags:
        - Disbursements
        summary: Set PayOut Preference
        description: set the disbursement PayOut option for a person.
        operationId: UpdatePayoutOption
        parameters:
        - name: person_guid
          in: query
          description: ''
          schema:
            type: string
            description: ''
            format: uuid
        - name: payoutpreference
          in: query
          description: ''
          schema:
            "$ref": "#/components/schemas/DisbursementPayoutOptions"
        - name: version
          in: path
          required: true
          schema:
            type: string
        responses:
          '200':
            description: Returns the payout preference
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/DisbursementPayoutPreference"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
    "/api/{version}/fees":
      get:
        tags:
        - Fees
        summary: Get Fees
        description: Use this end point to retrieve or find fee details.
        operationId: GetFees
        parameters:
        - name: program_guid
          in: query
          required: true
          schema:
            type: string
            format: uuid
        - name: request_code
          in: query
          schema:
            type: string
            nullable: true
        - name: version
          in: path
          required: true
          schema:
            type: string
        responses:
          '200':
            description: Returns the list of fees with details
            content:
              application/json:
                schema:
                  type: array
                  items:
                    "$ref": "#/components/schemas/FeesResponse"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Program not found
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
    "/api/{version}/fees/apply":
      post:
        tags:
        - Fees
        summary: Apply Fee
        description: Apply a fee to the source with the proceeds going into the revenue
          account
        operationId: ApplyFee
        parameters:
        - name: version
          in: path
          required: true
          schema:
            type: string
        requestBody:
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ApplyFeeRequest"
        responses:
          '201':
            description: Returns newly created fee details
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ApplyFeeResponse"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Card not found
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
    "/api/{version}/outside_instruments":
      get:
        tags:
        - Instruments
        summary: Search Instruments
        description: Retrieve a list of one or more external instruments.
        operationId: SearchInstrument
        parameters:
        - name: person_guid
          in: query
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
        responses:
          '200':
            description: Returns the List of instruments
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/OutsideInstrumentDTOSearchResponse"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Instrument not found
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
      post:
        tags:
        - Instruments
        summary: Create Instrument
        description: "Create or Add an external instrument to Qolo platform. The external
          instrument may be a bank account or a credit/debit card or any other account
          held by another financial institution.\r\n\r\nTo add bank account use the
          following conditions <br />\r\nIf instrument_type = BANKDDA then provide an
          account_number and routing_number <br />\r\nIf instrument_type = IBAN then
          \ provide IBAN in account_number field and swiftBicCode in bank_identifier
          field <br />\r\nIf instrument_type = BBAN then  provide account_number ,  swiftBicCode
          in bank_identifier field (if applicable) <br />\r\nand additional rounting
          info in routing_number field <br />\r\n\r\nQolo also blocks transfers to certain
          countries and you will not be able to add the bank accounts / cards from the
          blocked countries."
        operationId: CreateInstrument
        parameters:
        - name: version
          in: path
          required: true
          schema:
            type: string
        requestBody:
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OutsideInstrumentDTO"
        responses:
          '201':
            description: Returns the newly created outside instrument
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/OutsideInstrumentDTO"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Person not found
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
    "/api/{version}/outside_instruments/{outside_instrument_guid}":
      get:
        tags:
        - Instruments
        summary: Retrieve Instrument
        description: Retrieve an external instrument using Instrument GUID.
        operationId: GetInstrumentById
        parameters:
        - name: outside_instrument_guid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
        responses:
          '200':
            description: Returns the List of instruments
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/OutsideInstrumentDTO"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Instrument not found
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
      post:
        tags:
        - Instruments
        summary: Status Instrument
        description: Change the status of an external instrument using Instrument GUID.
        operationId: StatusInstrument
        parameters:
        - name: outside_instrument_guid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
        requestBody:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/StatusInstrumentRequest"
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/OutsideInstrumentDTO"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Instrument not found
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
    "/api/{version}/outside_instruments/{outside_instrument_guid}/verify":
      post:
        tags:
        - Instruments
        summary: Verify instrument
        description: Mark an external instrument as verified, so it may be used for
          transfers.
        operationId: VerifyInstrument
        parameters:
        - name: version
          in: path
          required: true
          schema:
            type: string
        - name: outside_instrument_guid
          in: path
          required: true
          schema:
            type: string
        requestBody:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OutsideInstrumentVerifyDTO"
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/OutsideInstrumentDTO"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Instrument not found
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
    "/api/{version}/InteractAuth":
      post:
        tags:
        - InteractAuth
        summary: InteractAuthorization
        description: "InteractAuthorization \r\n\r\nSimulate Interact Authorization
          to get response"
        operationId: InteractAuthorization
        parameters:
        - name: version
          in: path
          required: true
          schema:
            type: string
        requestBody:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/InteractAuthRequest"
        responses:
          '201':
            description: Interact Auth response
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/InteractAuthResponse"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
    "/api/{version}/InteractAuth/SendMessage":
      post:
        tags:
        - InteractAuth
        summary: SendMessage
        description: "SendMessage \r\n\r\nSimulate Send Interact Message to client"
        operationId: SendMessage
        parameters:
        - name: version
          in: path
          required: true
          schema:
            type: string
        requestBody:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/IA_Message"
        responses:
          '201':
            description: Send Message response
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/IA_Message"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
    "/api/{version}/InteractAuth/InteractAuthSimulator":
      post:
        tags:
        - InteractAuth
        summary: InteractAuthSimulator
        description: "InteractAuthSimulator \r\n\r\nSimulate Send Interact Auth to client"
        operationId: InteractAuthSimulator
        parameters:
        - name: version
          in: path
          required: true
          schema:
            type: string
        requestBody:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/IA_Auth_SimuMsg"
        responses:
          '201':
            description: Interact Auth request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/InteractAuthRequest"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
    "/api/{version}/payments":
      post:
        tags:
        - Payments
        summary: Payments
        description: Schedule a payment. This endpoint can be used to create a time
          based schedule or conditional payment schedule
        operationId: Payments
        parameters:
        - name: version
          in: path
          required: true
          schema:
            type: string
        requestBody:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaymentRequest"
        responses:
          '201':
            description: Returns the newly scheduled payment
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/PaymentResponse"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Program not found
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
      get:
        tags:
        - Payments
        summary: Retrieve Payments
        description: Use this end point to retrieve or find a specific info of payments.
          start_search_date and end_search_date are UTC datetime
        operationId: GetPaymentDetails
        parameters:
        - name: wallet_guid
          in: query
          description: ''
          schema:
            type: string
            description: ''
            format: uuid
        - name: start_search_date
          in: query
          schema:
            type: string
            format: date-time
        - name: end_search_date
          in: query
          schema:
            type: string
            format: date-time
        - name: start_index
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: version
          in: path
          required: true
          schema:
            type: string
        responses:
          '200':
            description: Returns the PaymentInfo
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/PaymentResponseDetSearchResponse"
          '400':
            description: Bad request.
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Person not found
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
    "/api/{version}/payments/{payment_guid}":
      put:
        tags:
        - Payments
        summary: Cancel Schedule Status
        description: "This end point will allow you to cancel a payment schedule on
          the Qolo platform.\r\nOnce a payment schedule is cancelled, a new pay schedule
          needs to be created,if needed again."
        operationId: CancelPaymentSchedule
        parameters:
        - name: payment_guid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
        responses:
          '200':
            description: Returns the payment schedule details for the payment guid
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/PaymentResponseDet"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
      get:
        tags:
        - Payments
        summary: Retrieve Payment
        description: Use this end point to retrieve or find a specific info of a payment.
        operationId: GetPayment
        parameters:
        - name: payment_guid
          in: path
          description: ''
          required: true
          schema:
            type: string
            description: ''
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
        responses:
          '200':
            description: Returns the PaymentInfo
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/PaymentResponseDet"
          '400':
            description: Bad request.
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Person not found
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
    "/api/{version}/payments/{payment_guid}/transactions":
      get:
        tags:
        - Payments
        summary: Recurring Payment Log
        description: Use this end point to retrieve info about Recurring Payment Log.
        operationId: GetPaymentRecurringLog
        parameters:
        - name: payment_guid
          in: path
          description: ''
          required: true
          schema:
            type: string
            description: ''
            format: uuid
        - name: payment_due_date
          in: query
          schema:
            type: string
            format: date-time
        - name: start_index
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: version
          in: path
          required: true
          schema:
            type: string
        responses:
          '200':
            description: Returns the PaymentRecurringLogInfo
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/PaymentTransactionsResponseDetSearchResponse"
          '400':
            description: Bad request.
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Person not found
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
    "/api/{version}/persons/search":
      post:
        tags:
        - Persons
        summary: Search Persons
        description: This end point allows you to search for one or more persons, using
          a search critera. The search criteria must be included in the body of the
          request.
        operationId: SearchPerson
        parameters:
        - name: version
          in: path
          required: true
          schema:
            type: string
        requestBody:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PersonSearch"
        responses:
          '200':
            description: Returns the Person
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/PersonDTOSearchResponse"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Person not found
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
    "/api/{version}/persons/{person_guid}":
      get:
        tags:
        - Persons
        summary: Retrieve Person
        description: Use this end point to retrieve or find a specific person. The end
          point may include request for all details, or with just the account details.
        operationId: GetPersonById
        parameters:
        - name: person_guid
          in: path
          description: ''
          required: true
          schema:
            type: string
            description: ''
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
        responses:
          '200':
            description: Returns the Person
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/PersonDTO"
          '400':
            description: Bad request.
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Person not found
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
    "/api/{version}/persons":
      post:
        tags:
        - Persons
        summary: Create Person
        description: This end points allow creation of new person on Qolo platform.
          A person may be a user or a company. The new person may be created with or
          without an account; and with or without a prepaid card (if allowed under the
          program). A new person's status will depend on their verification status.
          We will conduct an electronic or manual verification on the person as required
          by the program under our person creation guideline.
        operationId: CreatePerson
        parameters:
        - name: version
          in: path
          required: true
          schema:
            type: string
        requestBody:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CreatePersonRequest"
        responses:
          '201':
            description: Returns the newly created Person
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/CreatePersonResponse"
          '400':
            description: Bad request.
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Program not found
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
      put:
        tags:
        - Persons
        summary: Update Person
        description: This end point will allow you to update a person information on
          the Qolo platform.
        operationId: UpdatePerson
        parameters:
        - name: version
          in: path
          required: true
          schema:
            type: string
        requestBody:
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PersonDTO"
        responses:
          '200':
            description: Returns the updated Person
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/PersonDTO"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
    "/api/{version}/persons/personrelation":
      post:
        tags:
        - Persons
        summary: Create Person Relation
        description: Create a relationship between two person records. This is used
          for sharing accounts.
        operationId: CreatePersonRelation
        parameters:
        - name: version
          in: path
          required: true
          schema:
            type: string
        requestBody:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CreatePersonRelationRequest"
        responses:
          '201':
            description: Person Relation Created
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/CreatePersonRelationResponse"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
    "/api/{version}/persons/updatepersonrelation":
      post:
        tags:
        - Persons
        summary: Update Person Relation
        description: "Update Person Relation\r\nFields supported:\r\n<li>relationship</li>"
        operationId: UpdatePersonRelation
        parameters:
        - name: version
          in: path
          required: true
          schema:
            type: string
        requestBody:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UpdatePersonRelationRequest"
        responses:
          '200':
            description: Returns the updated Account
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/PersonRelation"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Not found
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
    "/api/{version}/persons/{person_guid}/kyc":
      get:
        tags:
        - Persons
        summary: Retrieve Person KYC
        description: Use this end point to display KYC documents
        operationId: GetKycResult
        parameters:
        - name: person_guid
          in: path
          description: person guid
          required: true
          schema:
            type: string
            description: person guid
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
        responses:
          '200':
            description: Returns the KYC details for person
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/PersonVerificationResultDTO"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Person not found
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
      post:
        tags:
        - Persons
        summary: Perform KYC
        description: "A person's KYC or Verification level can be set/upgraded using
          this API. \r\nThe following actions are available.\r\n<ul><li>Initiate Verification
          for an existing Person</li><li>Update Verification data or documents</li><li>Answer
          'challenge' questions for verification</li><li>Override verification level
          by Client</li></ul>"
        operationId: PerformKYC
        parameters:
        - name: person_guid
          in: path
          description: person guid
          required: true
          schema:
            type: string
            description: person guid
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
        requestBody:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/VerificationRequest"
        responses:
          '200':
            description: Returns the KYC details for person
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/PersonVerificationResultDTO"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Person not found
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
    "/api/{version}/reports/templates":
      get:
        tags:
        - Reports
        summary: Get report templates
        description: Report templates supported
        operationId: GetReportTemplates
        parameters:
        - name: version
          in: path
          required: true
          schema:
            type: string
        responses:
          '200':
            description: Returns report templates
            content:
              application/json:
                schema:
                  type: array
                  items:
                    type: string
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
    "/api/{version}/reports":
      get:
        tags:
        - Reports
        summary: Request Report
        description: "<br> All report times are based on UTC time. </br>\r\n<br> The
          StatusSummary report will generate a report based on data available when the
          report is run. </br>\r\n<br> The Breakage, Dormancy, NegativeBalance, and
          EODBalanceSummary reports will use one date input.  </br>\r\n<br> If no date
          is provided, they will default to the date 2 days prior to the current date.
          </br>\r\n<br> All other reports will take 2 date inputs. </br>"
        operationId: RequestReport
        parameters:
        - name: report_name
          in: query
          description: report name
          schema:
            type: string
            description: report name
            nullable: true
        - name: program_guid
          in: query
          description: program guid
          schema:
            type: string
            description: program guid
            format: uuid
        - name: date_from
          in: query
          description: from date (optional)
          schema:
            type: string
            description: from date (optional)
            format: date-time
            nullable: true
        - name: date_to
          in: query
          description: to date (optional)
          schema:
            type: string
            description: to date (optional)
            format: date-time
            nullable: true
        - name: override_flag
          in: query
          description: override flag (optional)
          schema:
            type: string
            description: override flag (optional)
            nullable: true
        - name: version
          in: path
          required: true
          schema:
            type: string
        responses:
          '200':
            description: Returns the Report Guid
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ReportResponse"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Report name not found
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
    "/api/{version}/reports/extended":
      post:
        tags:
        - Reports
        summary: Request Extended Report
        description: "<br> All report times are based on UTC time. </br>\r\n<br> The
          extended report call will generate a report based on data available when the
          report is run. </br>\r\n<br> Program Guid is not a mandatory input. </br>"
        operationId: RequestReportExt
        parameters:
        - name: version
          in: path
          required: true
          schema:
            type: string
        requestBody:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ReportRequestExt"
        responses:
          '200':
            description: Returns the Report Guid
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ReportResponse"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Report name not found
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
    "/api/{version}/reports/Download":
      get:
        tags:
        - Reports
        summary: Download Report
        description: Download Report by Reference Id
        operationId: DownloadReportById
        parameters:
        - name: reference_id
          in: query
          description: Report Reference Guid in string
          schema:
            type: string
            description: Report Reference Guid in string
            nullable: true
        - name: version
          in: path
          required: true
          schema:
            type: string
        responses:
          '200':
            description: Returns the Report as attachment
            content:
              text/csv:
                schema:
                  type: string
                  format: binary
              application/json:
                schema:
                  type: string
                  format: binary
          '400':
            description: Bad request
            content:
              text/csv:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              text/csv:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Report not found
            content:
              text/csv:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
    "/api/{version}/TransactionAuthSimulator":
      post:
        tags:
        - TransactionAuthSimulator
        summary: Transaction Authorization Simulator
        description: "TransactionAuthSimulator\r\nSimulate Transaction Authorizations
          to get response"
        operationId: SimulateAuthorizeTransaction
        parameters:
        - name: version
          in: path
          required: true
          schema:
            type: string
        requestBody:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TransactionAuthSimRequest"
        responses:
          '201':
            description: Transaction auth sim response
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/TransactionAuthSimResponse"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
    "/api/{version}/transactions/{txn_guid}":
      get:
        tags:
        - Transactions
        summary: Retrieve Transaction
        description: Use this end point to retrieve or find a specific transaction details.
        operationId: GetTransactionById
        parameters:
        - name: txn_guid
          in: path
          description: ''
          required: true
          schema:
            type: string
            description: ''
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
        responses:
          '200':
            description: Returns the Transaction with details
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/TxnLedgerDTO"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Transaction not found
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
    "/api/{version}/transactions/search":
      post:
        tags:
        - Transactions
        summary: Search Transactions
        description: Retrieve list of one or more transactions based on search criteria.
        operationId: SearchTransaction
        parameters:
        - name: version
          in: path
          required: true
          schema:
            type: string
        requestBody:
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TxnSearchDTO"
        responses:
          '200':
            description: Returns the transactions
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/TxnLedgerDTOSearchResponse"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Transaction not found
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
    "/api/{version}/transfers":
      post:
        tags:
        - Transfers
        summary: Create transfer
        description: "Create a new transfer to move funds from one Qolo Account to another.
          \r\n\r\nFollowing are different types of transfer supported in the platform\r\n\r\nPartner
          to Card - Partner can transfer funds from progfund account to card using card
          proxy or account guid\r\nAccount to External bank accounts (Add outside_instrument
          and then use the guid in this API)\r\nExternal bank accounts to Account (Add
          outside_instrument and then use the guid in this API)\r\nThis API supports
          transfer with currency conversions and this api uses the exchange rates provided
          by our banking partner."
        operationId: CreateTransfer
        parameters:
        - name: version
          in: path
          required: true
          schema:
            type: string
        requestBody:
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TransferRequest"
        responses:
          '201':
            description: Returns the newly created transfer
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/TransferResponse"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Account not found
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
    "/api/{version}/transfers/{txn_guid}/reversals":
      post:
        tags:
        - Transfers
        summary: Reverse transfer
        description: Reverse an existing transfer.
        operationId: TransferReversal
        parameters:
        - name: version
          in: path
          required: true
          schema:
            type: string
        - name: txn_guid
          in: path
          required: true
          schema:
            type: string
        requestBody:
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TransferReversalRequest"
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/TransferReversalResponse"
          '201':
            description: Returns the newly created transfer
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
    "/api/{version}/transfers/quote":
      post:
        tags:
        - Transfers
        summary: Quote
        description: Get a qoute for a currency exhange.
        operationId: Quote
        parameters:
        - name: version
          in: path
          required: true
          schema:
            type: string
        requestBody:
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/QuoteRequest"
        responses:
          '201':
            description: Returns the newly created quote
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/QuoteResponse"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Account not found
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
    "/api/{version}/transfers/RequestForTransferRefund":
      post:
        tags:
        - Transfers
        summary: Request For Transfer Refund (RTP)
        description: "Request For Transfer Refund\r\n\r\nRequest For RTP Transfer Refund"
        operationId: RequestForTransferRefund
        parameters:
        - name: version
          in: path
          required: true
          schema:
            type: string
        requestBody:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/RTPRefundRequest"
        responses:
          '201':
            description: BankEFTRequest
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/BankEftEntry"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
    "/api/{version}/transfers/BankRequestApproval":
      post:
        tags:
        - Transfers
        summary: Bank Request Approval (RTP)
        description: "BankRequestApproval \r\n\r\nBank Request Approval"
        operationId: BankRequestApproval
        parameters:
        - name: version
          in: path
          required: true
          schema:
            type: string
        requestBody:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/RTPBankApprovalRequest"
        responses:
          '201':
            description: BankEFTRequest
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/BankEftEntry"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
    "/api/{version}/velocitylimits":
      post:
        tags:
        - VelocityLimits
        summary: Create new velocity limit
        description: "Create new velocity limit \r\n\r\nFollowing are different types
          of velocity limits supported in the platform\r\nVelocity Limits can be set
          based on Spending limit, Cash limit and load limit\r\nExpiry limit time can
          be set in minutes\r\nThese limits can transactional limits, weekly, monthly,daily
          or yearly\r\nThis API supports velocity limit set ups based on account_guid
          or card proxy.\r\nAccount_Guid value takes precedence over cardproxy.\r\nIf
          Account_Guid is not provided, Card_proxy and currency values are used to fetch
          the account_guid value."
        operationId: CreateNewVelocityLimit
        parameters:
        - name: version
          in: path
          required: true
          schema:
            type: string
        requestBody:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ProcessOperationConditionsRequest"
        responses:
          '201':
            description: Returns the newly velocity limit
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProcessOperationConditionsResponse"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
      get:
        tags:
        - VelocityLimits
        summary: Get velocity limits
        description: "These limits can be transactional limits, daily, weekly, monthly
          or yearly; Unlimited = 10 years.\r\nThis API supports getting velocity limits
          set based on account_guid or card proxy, but not both."
        operationId: GetVelocityLimits
        parameters:
        - name: card_proxy
          in: query
          description: card proxy
          schema:
            type: string
            description: card proxy
            default: ''
            nullable: true
        - name: account_guid
          in: query
          description: account guid
          schema:
            type: string
            description: account guid
            format: uuid
        - name: currency_code
          in: query
          description: currency code
          schema:
            type: string
            description: currency code
            default: ''
            nullable: true
        - name: program_guid
          in: query
          description: program guid
          schema:
            type: string
            description: program guid
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
        responses:
          '200':
            description: Returns the velocity limits
            content:
              application/json:
                schema:
                  type: array
                  items:
                    "$ref": "#/components/schemas/VelocityLimitDTO"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Velocity limits not found
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
    "/api/{version}/wallets":
      get:
        tags:
        - Wallets
        summary: Search Wallets
        description: Search for one or more wallets based on search criteria. This call
          returns several pieces of wallet related information including accounts and
          balances.
        operationId: SearchWallet
        parameters:
        - name: card_proxy
          in: query
          description: card proxy
          schema:
            type: string
            description: card proxy
            nullable: true
        - name: client_reference_id
          in: query
          description: client reference id
          schema:
            type: string
            description: client reference id
            nullable: true
        - name: person_guid
          in: query
          description: person guid
          schema:
            type: string
            description: person guid
            format: uuid
        - name: account_guid
          in: query
          description: account guid
          schema:
            type: string
            description: account guid
            format: uuid
        - name: wallet_guid
          in: query
          description: wallet guid
          schema:
            type: string
            description: wallet guid
            format: uuid
        - name: account_instrument_guid
          in: query
          description: account instrument guid
          schema:
            type: string
            description: account instrument guid
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
        responses:
          '200':
            description: Returns the Wallet details
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/WalletDTOSearchResponse"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Wallet not found
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
      post:
        tags:
        - Wallets
        summary: Create Wallet
        description: Create a wallet for person on Qolo platform. If the person is already
          created, send an existing Person GUID.
        operationId: CreateWallet
        parameters:
        - name: version
          in: path
          required: true
          schema:
            type: string
        requestBody:
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CreateWalletRequest"
        responses:
          '201':
            description: Returns the newly created Wallet
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/WalletDTO"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Program not found
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
    "/api/{version}/wallets/changeprogram":
      post:
        tags:
        - Wallets
        summary: Change Program
        description: Upgrade a wallet to a different program. Wallets can not be changed
          back the previous program. The program change effects all cards and accounts
          linked to the wallet.
        operationId: ChangeProgram
        parameters:
        - name: version
          in: path
          required: true
          schema:
            type: string
        requestBody:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ChangeProgramRequest"
        responses:
          '200':
            description: Returns the updated Wallet
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ChangeProgramResponse"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
    "/api/{version}/wallets/{wallet_guid}":
      get:
        tags:
        - Wallets
        summary: Retrieve Wallet
        description: Use this end point to retrieve or find a specific wallet using
          Wallet GUID.
        operationId: GetWalletById
        parameters:
        - name: wallet_guid
          in: path
          description: ''
          required: true
          schema:
            type: string
            description: ''
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
        responses:
          '200':
            description: Returns the Wallet with account details
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/WalletDTO"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Wallet not found
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
    "/api/{version}/webhooks":
      get:
        tags:
        - Webhooks
        summary: Retrieve Webhooks
        description: Retrieve all Webhooks configured
        operationId: GetNotificationAll
        parameters:
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
            default: 10
        - name: start_index
          in: query
          schema:
            type: integer
            format: int32
            default: 1
        - name: version
          in: path
          required: true
          schema:
            type: string
        responses:
          '200':
            description: Returns list of the Webhook details
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/NotificationConfigurationDTOSearchResponse"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Webhook not found
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
      post:
        tags:
        - Webhooks
        summary: Create Webhook
        description: "Create URL endpoint for Webhook\r\n<li>event types: </li><li>all,
          card.created, card.activated, card.status, card.pin.changed, card.replaced,
          card.fulfilment, </li><li>person.created, person.verification.success, </li><li>wallet.created,
          account.created, account.activated, account.closed, account.status, account.instrument.created,
          outside.instrument.created, </li><li>auth.approved, auth.reversed, auth.refunded,
          </li><li>bankeft.credit.received, bankeft.credit.reversed, bankeft.credit.returned,
          </li><li>bankeft.debit.received, bankeft.debit.reversed, bankeft.debit.returned,
          </li><li>transfer.success, check.cleared, payment.success, payment.failure,
          realtimepayment </li>"
        operationId: CreateNotification
        parameters:
        - name: version
          in: path
          required: true
          schema:
            type: string
        requestBody:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NotificationConfigurationDTO"
        responses:
          '201':
            description: Returns newly created Webhook details
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/NotificationConfigurationDTO"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Webhook not found
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
    "/api/{version}/webhooks/{notification_guid}":
      get:
        tags:
        - Webhooks
        summary: Retrieve Webhook
        description: Retrieve Webhook configured by guid
        operationId: GetNotificationById
        parameters:
        - name: notification_guid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
        responses:
          '200':
            description: Returns Webhook details
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/NotificationConfigurationDTO"
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Webhook not found
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
      put:
        tags:
        - Webhooks
        summary: Update Webhook
        description: "Update Webhook by guid\r\n<li>event types: </li><li>all, card.created,
          card.activated, card.status, card.pin.changed, card.replaced, card.fulfilment,
          </li><li>person.created, person.verification.success, </li><li>wallet.created,
          account.created, account.instrument.created, outside.instrument.created, </li><li>auth.approved,
          auth.reversed, auth.refunded, </li><li>bankeft.credit.received, bankeft.credit.reversed,
          bankeft.credit.returned, </li><li>bankeft.debit.received, bankeft.debit.reversed,
          bankeft.debit.returned, </li><li>transfer.success</li>"
        operationId: UpdateNotificationById
        parameters:
        - name: notification_guid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: string
        requestBody:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NotificationConfigurationDTO"
        responses:
          '200':
            description: Success
          '204':
            description: ''
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '404':
            description: Not found
            content:
              application/json:
                schema:
                  "$ref": "#/components/schemas/ProblemDetails"
          '500':
            description: Server Error
  components:
    schemas:
      BankAccountType:
        enum:
        - DDA
        - IBAN
        - BBAN
        - VAN
        type: string
      CreateAccountInstrumentRequest:
        type: object
        properties:
          account_instrument_type:
            "$ref": "#/components/schemas/BankAccountType"
          wallet_guid:
            type: string
            format: uuid
          wallet_id:
            type: string
            nullable: true
          account_guid:
            type: string
            format: uuid
        additionalProperties: false
      AddressDTO:
        type: object
        properties:
          city:
            maxLength: 30
            type: string
            nullable: true
          country:
            maxLength: 3
            type: string
            nullable: true
          address_line1:
            maxLength: 60
            type: string
            nullable: true
          address_line2:
            maxLength: 60
            type: string
            nullable: true
          postal_code:
            maxLength: 10
            type: string
            nullable: true
          state:
            maxLength: 30
            type: string
            nullable: true
        additionalProperties: false
      BankAccount:
        required:
        - account_number
        - account_type
        type: object
        properties:
          account_type:
            "$ref": "#/components/schemas/BankAccountType"
          account_number:
            maxLength: 16
            minLength: 6
            type: string
          routing_number:
            maxLength: 16
            minLength: 6
            type: string
            nullable: true
          rtp_routing_number:
            maxLength: 16
            minLength: 6
            type: string
            nullable: true
          bank_identifier:
            type: string
            nullable: true
          bank_dba:
            maxLength: 30
            minLength: 6
            type: string
            nullable: true
          bank_address:
            "$ref": "#/components/schemas/AddressDTO"
          bank_phone:
            type: string
            nullable: true
          description:
            type: string
            nullable: true
          name_on_account:
            type: string
            nullable: true
          accountholder_address:
            "$ref": "#/components/schemas/AddressDTO"
          additionalData:
            type: object
            additionalProperties:
              type: string
            nullable: true
        additionalProperties: false
      InstrumentType:
        enum:
        - BANKDDA
        - IBAN
        - BBAN
        - CARD
        - CHECK
        type: string
      InstrumentStatus:
        enum:
        - ACTIVE
        - SUSPEND
        - NEGLIST
        - FORGET
        - UNPROVED
        type: string
      AccountInstrumentDTO:
        type: object
        properties:
          routing_number:
            maxLength: 16
            minLength: 6
            type: string
            nullable: true
          account_instrument_guid:
            type: string
            format: uuid
          account_guid:
            type: string
            format: uuid
          account_info:
            "$ref": "#/components/schemas/BankAccount"
          mask_account_number:
            type: string
            nullable: true
          instrument_type:
            "$ref": "#/components/schemas/InstrumentType"
          instrument_status:
            "$ref": "#/components/schemas/InstrumentStatus"
        additionalProperties: false
      ProblemDetails:
        type: object
        properties:
          type:
            type: string
            nullable: true
          title:
            type: string
            nullable: true
          status:
            type: integer
            format: int32
            nullable: true
          detail:
            type: string
            nullable: true
          instance:
            type: string
            nullable: true
        additionalProperties: {}
      AccountType:
        enum:
        - GENERAL
        - PROGFUND
        - CHECK
        - REVENUE
        - COLLECTION
        - PRINCIPAL
        - SECURE
        - CREDIT
        - USERDEFINED
        - ADVANCE
        - PROG_DISBURSE
        type: string
      AdvanceSchedule:
        type: object
        properties:
          mob:
            type: integer
            format: int32
            nullable: true
          date:
            type: string
            format: date-time
            nullable: true
          disbursement_principal:
            type: number
            format: double
            nullable: true
          disbursement_fee:
            type: number
            format: double
            nullable: true
          total:
            type: number
            format: double
            nullable: true
          fee:
            type: number
            format: double
            nullable: true
          principal:
            type: number
            format: double
            nullable: true
          balance:
            type: number
            format: double
            nullable: true
          paid_principal:
            type: number
            format: double
            nullable: true
          paid_interest:
            type: number
            format: double
            nullable: true
          available_balance:
            type: number
            format: double
            nullable: true
          cycle:
            type: string
            nullable: true
          type:
            type: string
            nullable: true
        additionalProperties: false
      AdvanceAvailableDateRange:
        type: object
        properties:
          name:
            type: string
            nullable: true
          date:
            type: string
            format: date-time
            nullable: true
        additionalProperties: false
      AdvanceAccount:
        type: object
        properties:
          account_guid:
            type: string
            format: uuid
            nullable: true
          client_reference_id:
            type: string
            format: uuid
          start_date:
            type: string
            format: date-time
            nullable: true
          limit:
            type: number
            format: double
            nullable: true
          outstanding_balance:
            type: number
            format: double
            nullable: true
          credit_product:
            type: string
            nullable: true
          cycle:
            type: string
            nullable: true
          status:
            type: string
            nullable: true
          payment_schedule:
            type: array
            items:
              "$ref": "#/components/schemas/AdvanceSchedule"
            nullable: true
          available_date_range:
            type: array
            items:
              "$ref": "#/components/schemas/AdvanceAvailableDateRange"
            nullable: true
        additionalProperties: false
      AdvanceAccountDetails:
        type: object
        properties:
          account:
            "$ref": "#/components/schemas/AdvanceAccount"
        additionalProperties: false
      AccountStatus:
        enum:
        - SYSTEM
        - ACTIVE
        - FREEZE
        - CLOSED
        - OPTOUT
        type: string
      AccountDTO:
        type: object
        properties:
          account_guid:
            type: string
            format: uuid
          wallet_guid:
            type: string
            format: uuid
          account_currency:
            type: string
            nullable: true
          account_name:
            type: string
            nullable: true
          account_type:
            "$ref": "#/components/schemas/AccountType"
          available_balance:
            type: number
            format: double
          ledger_balance:
            type: number
            format: double
          suspense_balance:
            type: number
            format: double
          advance_account_details:
            "$ref": "#/components/schemas/AdvanceAccountDetails"
          account_status:
            "$ref": "#/components/schemas/AccountStatus"
          last_txn_guid:
            type: string
            format: uuid
            nullable: true
          post_date:
            type: string
            format: date-time
            nullable: true
          amount:
            type: number
            format: double
            nullable: true
        additionalProperties: false
      AccountDTOSearchResponse:
        required:
        - count
        - data
        - end_index
        - has_more
        - start_index
        type: object
        properties:
          count:
            type: integer
            format: int32
          start_index:
            type: integer
            format: int32
          end_index:
            type: integer
            format: int32
          has_more:
            type: boolean
          data:
            type: array
            items:
              "$ref": "#/components/schemas/AccountDTO"
        additionalProperties: false
      CreateAccountRequest:
        type: object
        properties:
          account_currencies:
            type: array
            items:
              type: string
            nullable: true
          wallet_guid:
            type: string
            format: uuid
          wallet_id:
            type: string
            nullable: true
          person_guid:
            type: string
            format: uuid
          account_type:
            "$ref": "#/components/schemas/AccountType"
          account_name:
            type: string
            nullable: true
          account_limit:
            type: integer
            format: int32
            nullable: true
        additionalProperties: false
      UpdateAccountInfoRequest:
        required:
        - account_name
        type: object
        properties:
          account_name:
            maxLength: 24
            type: string
        additionalProperties: false
      AccountStatusUser:
        required:
        - account_status
        type: object
        properties:
          account_status:
            "$ref": "#/components/schemas/AccountStatus"
          reason_code:
            type: string
            nullable: true
          reason_description:
            type: string
            nullable: true
        additionalProperties: false
      Account:
        required:
        - account_currency
        - account_guid
        - account_name
        - account_status
        - account_status_date
        - account_type
        - available_balance
        - first_debit_amount
        - holder_account_status
        - holder_account_status_date
        - last_credit_amount
        - last_debit_amount
        - ledger_balance
        - starting_balance_amount
        - suspense_balance
        - sys_utcinserted
        - sys_utcupdated
        - wallet_guid
        type: object
        properties:
          account_guid:
            type: string
            format: uuid
          wallet_guid:
            type: string
            format: uuid
          account_type:
            maxLength: 20
            type: string
          account_name:
            maxLength: 24
            type: string
          account_currency:
            maxLength: 3
            type: string
          available_balance:
            type: number
            format: double
          ledger_balance:
            type: number
            format: double
          suspense_balance:
            type: number
            format: double
          starting_balance_date:
            type: string
            format: date-time
            nullable: true
          starting_balance_amount:
            type: number
            format: double
          last_credit_date:
            type: string
            format: date-time
            nullable: true
          last_credit_amount:
            type: number
            format: double
          first_debit_date:
            type: string
            format: date-time
            nullable: true
          first_debit_amount:
            type: number
            format: double
          last_debit_date:
            type: string
            format: date-time
            nullable: true
          last_debit_amount:
            type: number
            format: double
          account_status:
            maxLength: 8
            type: string
          account_status_date:
            type: string
            format: date-time
          holder_account_status:
            maxLength: 8
            type: string
          holder_account_status_date:
            type: string
            format: date-time
          sys_utcinserted:
            type: string
            format: date-time
          sys_utcupdated:
            type: string
            format: date-time
          last_txn_guid:
            type: string
            format: uuid
            nullable: true
        additionalProperties: false
      AdjustBalanceRequest:
        required:
        - amount
        - currency
        - request_code
        type: object
        properties:
          client_reference_id:
            type: string
            nullable: true
          request_code:
            type: string
          amount:
            type: number
            format: double
          currency:
            maxLength: 3
            minLength: 3
            type: string
          description:
            maxLength: 48
            minLength: 0
            type: string
            nullable: true
          account_guid:
            type: string
            format: uuid
            nullable: true
          wire_date:
            type: string
            format: date-time
            nullable: true
          card_proxy:
            type: string
            nullable: true
          account:
            "$ref": "#/components/schemas/Account"
          user_guid:
            type: string
            format: uuid
          source_code:
            type: string
            nullable: true
        additionalProperties: false
      AdjustBalanceResponse:
        required:
        - amount
        - currency
        - request_code
        type: object
        properties:
          client_reference_id:
            type: string
            nullable: true
          request_code:
            type: string
          amount:
            type: number
            format: double
          currency:
            maxLength: 3
            minLength: 3
            type: string
          description:
            maxLength: 48
            minLength: 0
            type: string
            nullable: true
          account_guid:
            type: string
            format: uuid
            nullable: true
          card_proxy:
            type: string
            nullable: true
          account:
            "$ref": "#/components/schemas/Account"
          user_guid:
            type: string
            format: uuid
          source_code:
            type: string
            nullable: true
        additionalProperties: false
      CreateSharedAccountRequest:
        required:
        - holder_person_guid
        - holder_shared_account_guid
        - related_person_guid
        type: object
        properties:
          create_wallet:
            type: boolean
          holder_person_guid:
            type: string
            format: uuid
          related_person_guid:
            type: string
            format: uuid
          holder_shared_account_guid:
            type: string
            format: uuid
          related_program_guid:
            type: string
            format: uuid
        additionalProperties: false
      AccountSharedPersonDTO:
        type: object
        properties:
          holder_person_guid:
            type: string
            format: uuid
          related_person_guid:
            type: string
            format: uuid
          holder_shared_account_guid:
            type: string
            format: uuid
          holder_wallet_guid:
            type: string
            format: uuid
          relationship:
            type: string
            nullable: true
          holder_share_status:
            type: string
            nullable: true
          system_share_status:
            type: string
            nullable: true
        additionalProperties: false
      IssuanceType:
        enum:
        - FULL
        - VIRTUALONETIME
        - VIRTUAL
        - VIRTUALTOKENALLOWED
        - TOKEN
        - ONETIMELOAD
        - OTHER
        type: string
      CardCondition:
        enum:
        - ORIGINAL
        - REISSUE
        - REPLACE
        - RENEW
        type: string
      CardStatus:
        enum:
        - ACTIVE
        - SUSPEND
        - LOST
        - STOLEN
        - CLOSED
        - FCLOSED
        - PENDING
        - DAMAGED
        - FORGET
        type: string
      CardActivationMethod:
        enum:
        - ONLOAD
        - ONISSUE
        - HOLDER
        type: string
      PersonCardStatus:
        enum:
        - ACTIVE
        - SUSPEND
        - FORGET
        type: string
      CardTrackingDTO:
        type: object
        properties:
          fulfillment_house_name:
            type: string
            nullable: true
          card_requested:
            type: string
            format: date-time
          card_shipment_date:
            type: string
            format: date-time
          card_delivery_method:
            type: string
            nullable: true
          card_delivery_tracking_number:
            type: string
            nullable: true
          card_package_name:
            type: string
            nullable: true
          card_order_status:
            type: string
            nullable: true
        additionalProperties: false
      CardDTO:
        type: object
        properties:
          card_number:
            type: string
            nullable: true
          card_proxy:
            type: string
            nullable: true
          mask_card_pan:
            type: string
            nullable: true
          wallet_guid:
            type: string
            format: uuid
          wallet_id:
            type: string
            nullable: true
          issuance_type:
            "$ref": "#/components/schemas/IssuanceType"
          base_iin:
            type: string
            nullable: true
          card_condition:
            "$ref": "#/components/schemas/CardCondition"
          card_status:
            "$ref": "#/components/schemas/CardStatus"
          activation_date:
            type: string
            format: date-time
            nullable: true
          activation_method:
            "$ref": "#/components/schemas/CardActivationMethod"
          expiration_date:
            type: string
            nullable: true
          cvx2:
            type: string
            nullable: true
          logical_expiration_date:
            type: string
            format: date-time
          person_card_status:
            "$ref": "#/components/schemas/PersonCardStatus"
          card_tracking_detail:
            "$ref": "#/components/schemas/CardTrackingDTO"
          sys_utcinserted:
            type: string
            format: date-time
          sys_utcupdated:
            type: string
            format: date-time
        additionalProperties: false
      WalletDTO:
        type: object
        properties:
          wallet_guid:
            type: string
            format: uuid
          wallet_id:
            type: string
            nullable: true
          person_guid:
            type: string
            format: uuid
          program_guid:
            type: string
            format: uuid
          program_name:
            type: string
            nullable: true
          program_short_name:
            type: string
            nullable: true
          parent_program_guid:
            type: string
            format: uuid
            nullable: true
          top_program_guid:
            type: string
            format: uuid
            nullable: true
          company_dba_name:
            type: string
            nullable: true
          company_short_name:
            type: string
            nullable: true
          account_status:
            type: string
            nullable: true
          wallet_created:
            type: string
            format: date-time
            nullable: true
          accounts:
            type: array
            items:
              "$ref": "#/components/schemas/AccountDTO"
            nullable: true
          cards:
            type: array
            items:
              "$ref": "#/components/schemas/CardDTO"
            nullable: true
          account_instruments:
            type: array
            items:
              "$ref": "#/components/schemas/AccountInstrumentDTO"
            nullable: true
          account_shared_persons:
            type: array
            items:
              "$ref": "#/components/schemas/AccountSharedPersonDTO"
            nullable: true
        additionalProperties: false
      CreateSharedAccountResponse:
        type: object
        properties:
          account_shared_person_data:
            "$ref": "#/components/schemas/AccountSharedPersonDTO"
          related_wallet:
            "$ref": "#/components/schemas/WalletDTO"
        additionalProperties: false
      HolderShareStatus:
        enum:
        - APPROVE
        - SUSPEND
        type: string
      UpdateSharedAccountRequest:
        required:
        - holder_person_guid
        - holder_share_status
        - holder_shared_account_guid
        - related_person_guid
        type: object
        properties:
          holder_person_guid:
            type: string
            format: uuid
          holder_shared_account_guid:
            type: string
            format: uuid
          related_person_guid:
            type: string
            format: uuid
          holder_share_status:
            "$ref": "#/components/schemas/HolderShareStatus"
        additionalProperties: false
      AdvanceCycleType:
        enum:
        - BIWEEKLY
        - SEMIMONTHLY
        type: string
      AdvancePreCalcRequest:
        type: object
        properties:
          payment_date:
            type: string
            format: date-time
          amount:
            type: number
            format: double
          cycle:
            "$ref": "#/components/schemas/AdvanceCycleType"
        additionalProperties: false
      AdvancePreCalcResponse:
        type: object
        properties:
          request_id:
            type: string
            nullable: true
          disbursement_amount_requested:
            type: number
            format: double
            nullable: true
          disbursement_fee_requested:
            type: number
            format: double
            nullable: true
          advance_account_details:
            "$ref": "#/components/schemas/AdvanceAccountDetails"
        additionalProperties: false
      ApplyAdvanceRequest:
        required:
        - outside_instrument_guid
        - progfund_account_guid
        - request_id
        type: object
        properties:
          request_id:
            type: string
            format: uuid
          progfund_account_guid:
            type: string
            format: uuid
          general_account_guid:
            type: string
            format: uuid
            nullable: true
          currency:
            maxLength: 3
            type: string
            nullable: true
          outside_instrument_guid:
            type: string
            format: uuid
        additionalProperties: false
      TransferDetail:
        type: object
        properties:
          account_guid:
            type: string
            format: uuid
            nullable: true
          wallet_guid:
            type: string
            format: uuid
            nullable: true
          wallet_id:
            type: string
            nullable: true
          card_proxy:
            type: string
            nullable: true
          outside_instrument_guid:
            type: string
            format: uuid
            nullable: true
        additionalProperties: false
      TransferResponse:
        required:
        - amount
        - currency
        - destination
        - source
        type: object
        properties:
          txn_guid:
            type: string
            format: uuid
          amount:
            type: number
            format: double
          currency:
            type: string
          description:
            type: string
            nullable: true
          source:
            "$ref": "#/components/schemas/TransferDetail"
          destination:
            "$ref": "#/components/schemas/TransferDetail"
          destination_amount:
            type: number
            format: double
          destination_currency:
            type: string
            nullable: true
        additionalProperties: false
      ApplyAdvanceResponse:
        type: object
        properties:
          disbursement_amount_requested:
            type: number
            format: double
            nullable: true
          disbursement_fee_requested:
            type: number
            format: double
            nullable: true
          advance_account_details:
            "$ref": "#/components/schemas/AdvanceAccountDetails"
          transfers:
            type: array
            items:
              "$ref": "#/components/schemas/TransferResponse"
            nullable: true
        additionalProperties: false
      ChangeAdvanceCycleRequest:
        type: object
        properties:
          period:
            type: integer
            format: int32
          cycle:
            "$ref": "#/components/schemas/AdvanceCycleType"
        additionalProperties: false
      ChangeAdvanceCycleResponse:
        type: object
        properties:
          advance_account_details:
            "$ref": "#/components/schemas/AdvanceAccountDetails"
        additionalProperties: false
      BatchfileType:
        enum:
        - EXCEL
        type: string
      BatchfileRequest:
        type: object
        properties:
          batchfile_type:
            "$ref": "#/components/schemas/BatchfileType"
          batchfile_name:
            type: string
            nullable: true
          document:
            type: string
            nullable: true
        additionalProperties: false
      BatchfileDTO:
        type: object
        properties:
          batchfile_guid:
            type: string
            format: uuid
          sys_utcinserted:
            type: string
            format: date-time
          sys_utcupdated:
            type: string
            format: date-time
          channel_name:
            type: string
            nullable: true
          file_path:
            type: string
            nullable: true
          last_row_loaded:
            type: integer
            format: int32
          file_direction:
            type: string
            nullable: true
          file_date:
            type: string
            format: date-time
          file_time:
            type: string
            nullable: true
          file_version:
            type: string
            nullable: true
          file_id_modifier:
            type: string
            nullable: true
          user_guid:
            type: string
            format: uuid
          batch_count:
            type: integer
            format: int32
            nullable: true
          entry_count:
            type: integer
            format: int32
            nullable: true
          credits_amount:
            type: number
            format: double
          debits_amount:
            type: number
            format: double
          file_name:
            type: string
            nullable: true
          file_status:
            type: string
            nullable: true
          program_guid:
            type: string
            format: uuid
        additionalProperties: false
      BatchfileResponse:
        type: object
        properties:
          responseStatus:
            type: string
            nullable: true
          batchfileDTO:
            "$ref": "#/components/schemas/BatchfileDTO"
        additionalProperties: false
      BatchfileDownloadRequest:
        type: object
        properties:
          program_guid:
            type: string
            format: uuid
          batchfile_guid:
            type: string
            format: uuid
        additionalProperties: false
      ShippingMethod:
        enum:
        - STDMAIL
        - EXPRESS2DAY
        - EXPRESSOVERNIGHT
        - STDMAILINT
        - EXPRESS2DAYINT
        - EXPRESS1DAYINT
        type: string
      OrderType:
        enum:
        - DTC
        - BULKC
        - BULKCC
        - BULK
        type: string
      GovtIDType:
        enum:
        - NOTPROVIDED
        - PASSPORT
        - DRIVERLICENSE
        - COUNTRYID
        type: string
      PersonIdentificationDTO:
        required:
        - govt_id_number
        - govt_id_type
        type: object
        properties:
          govt_id_type:
            "$ref": "#/components/schemas/GovtIDType"
          govt_id_number:
            maxLength: 800
            type: string
        additionalProperties: false
      PersonStatus:
        enum:
        - INCOMPLETE
        - UNVERIFIED
        - CLEARED
        - SANCTIONED
        - PEP
        - NEGLIST
        - ANONYMOUS
        type: string
      PersonRelation:
        required:
        - holder_person_guid
        - person_relationship
        - related_person_guid
        - sys_utcinserted
        - sys_utcupdated
        type: object
        properties:
          holder_person_guid:
            type: string
            format: uuid
          related_person_guid:
            type: string
            format: uuid
          person_relationship:
            maxLength: 32
            type: string
          sys_utcinserted:
            type: string
            format: date-time
          sys_utcupdated:
            type: string
            format: date-time
        additionalProperties: false
      PersonDTO:
        type: object
        properties:
          identifications:
            type: array
            items:
              "$ref": "#/components/schemas/PersonIdentificationDTO"
            nullable: true
          person_guid:
            type: string
            format: uuid
          birth_date:
            type: string
            nullable: true
          email:
            type: string
            nullable: true
          first_name:
            maxLength: 32
            type: string
            nullable: true
          middle_name:
            maxLength: 32
            type: string
            nullable: true
          last_name:
            maxLength: 32
            type: string
            nullable: true
          additional_data:
            type: object
            additionalProperties:
              type: string
            nullable: true
          mobile_number:
            type: string
            nullable: true
          home_number:
            type: string
            nullable: true
          office_number:
            type: string
            nullable: true
          base_address:
            "$ref": "#/components/schemas/AddressDTO"
          mailing_address:
            "$ref": "#/components/schemas/AddressDTO"
          billing_address:
            "$ref": "#/components/schemas/AddressDTO"
          nationality:
            maxLength: 3
            type: string
            nullable: true
          ip_address:
            type: string
            nullable: true
          person_status:
            "$ref": "#/components/schemas/PersonStatus"
          client_reference_id:
            type: string
            nullable: true
          verfication_mode:
            type: string
            nullable: true
          verfication_level:
            type: string
            nullable: true
          person_forget_mode:
            type: string
            nullable: true
          person_forget_mode_date:
            type: string
            nullable: true
          market_notification_optin:
            type: string
            nullable: true
          market_notification_optin_date:
            type: string
            nullable: true
          address_lat:
            type: number
            format: double
          address_lon:
            type: number
            format: double
          contact_type:
            type: string
            nullable: true
          profile_dd_mode:
            type: string
            nullable: true
          request_code:
            type: string
            nullable: true
          wallet_id:
            type: string
            nullable: true
          title:
            type: string
            nullable: true
          person_relations:
            type: array
            items:
              "$ref": "#/components/schemas/PersonRelation"
            nullable: true
        additionalProperties: false
      BulkIssuanceType:
        enum:
        - FULL
        - ONETIMELOAD
        type: string
      BulkOrderRequest:
        required:
        - location_name
        - person
        - program_guid
        type: object
        properties:
          package_guid:
            type: string
            format: uuid
          shipping_method:
            "$ref": "#/components/schemas/ShippingMethod"
          order_guid:
            type: string
            format: uuid
            nullable: true
          wallet_guid:
            type: string
            format: uuid
            nullable: true
          program_guid:
            type: string
            format: uuid
          order_type:
            "$ref": "#/components/schemas/OrderType"
          order_count:
            type: integer
            format: int32
          order_status:
            maxLength: 40
            type: string
            nullable: true
          person:
            "$ref": "#/components/schemas/PersonDTO"
          bulk_issuance_type:
            "$ref": "#/components/schemas/BulkIssuanceType"
          carrier:
            maxLength: 100
            type: string
            nullable: true
          location_name:
            maxLength: 48
            type: string
        additionalProperties: false
      BulkOrderPersonInfo:
        type: object
        properties:
          person_guid:
            type: string
            format: uuid
          first_name:
            maxLength: 32
            type: string
            nullable: true
          middle_name:
            maxLength: 32
            type: string
            nullable: true
          last_name:
            maxLength: 32
            type: string
            nullable: true
          mailing_city:
            maxLength: 30
            type: string
            nullable: true
          mailing_country:
            maxLength: 3
            type: string
            nullable: true
          mailing_address_line1:
            maxLength: 60
            type: string
            nullable: true
          address_line2:
            maxLength: 60
            type: string
            nullable: true
          postal_code:
            maxLength: 10
            type: string
            nullable: true
          state:
            maxLength: 30
            type: string
            nullable: true
          location_name:
            maxLength: 48
            type: string
            nullable: true
          email_address:
            maxLength: 128
            type: string
            nullable: true
          mobile_number:
            maxLength: 16
            type: string
            format: tel
            nullable: true
          office_number:
            maxLength: 16
            type: string
            format: tel
            nullable: true
        additionalProperties: false
      BulkOrderResponse:
        type: object
        properties:
          package_guid:
            type: string
            format: uuid
            nullable: true
          order_guid:
            type: string
            format: uuid
            nullable: true
          program_guid:
            type: string
            format: uuid
          order_status:
            maxLength: 40
            type: string
            nullable: true
          person:
            "$ref": "#/components/schemas/BulkOrderPersonInfo"
        additionalProperties: false
      BulkOrders:
        required:
        - package_name
        - person
        type: object
        properties:
          order_guid:
            type: string
            format: uuid
            nullable: true
          program_guid:
            type: string
            format: uuid
            nullable: true
          package_guid:
            type: string
            format: uuid
            nullable: true
          order_type:
            type: string
            nullable: true
          shipping_method:
            type: string
            nullable: true
          tracking_number:
            maxLength: 20
            type: string
            nullable: true
          order_count:
            type: integer
            format: int32
            nullable: true
          bulk_order_status:
            type: string
            nullable: true
          order_date:
            type: string
            format: date-time
          package_name:
            type: string
          order_error_message:
            maxLength: 200
            type: string
            nullable: true
          carrier:
            maxLength: 100
            type: string
            nullable: true
          person:
            "$ref": "#/components/schemas/BulkOrderPersonInfo"
        additionalProperties: false
      BulkOrdersSearchResponse:
        required:
        - count
        - data
        - end_index
        - has_more
        - start_index
        type: object
        properties:
          count:
            type: integer
            format: int32
          start_index:
            type: integer
            format: int32
          end_index:
            type: integer
            format: int32
          has_more:
            type: boolean
          data:
            type: array
            items:
              "$ref": "#/components/schemas/BulkOrders"
        additionalProperties: false
      BulkOrderReq:
        type: object
        properties:
          order_guid:
            type: string
            format: uuid
          program_guid:
            type: string
            format: uuid
        additionalProperties: false
      Person:
        required:
        - address_lat
        - address_lon
        - base_address_line1
        - base_address_line2
        - base_city
        - base_country
        - base_postal_code
        - base_state
        - billing_address_line1
        - billing_address_line2
        - billing_city
        - billing_country
        - billing_postal_code
        - billing_state
        - contact_type
        - email_address
        - first_name
        - govt_id_number
        - govt_id_type
        - hashed_govt_id_number
        - home_number
        - key_ref
        - last_name
        - mailing_address_line1
        - mailing_address_line2
        - mailing_city
        - mailing_country
        - mailing_postal_code
        - mailing_state
        - market_notification_optin
        - market_notification_optin_date
        - middle_name
        - mobile_number
        - nationality
        - office_number
        - person_forget_mode
        - person_forget_mode_date
        - person_guid
        - person_status
        - private_data_key_token
        - profile_dd_mode
        - sys_utcinserted
        - sys_utcupdated
        type: object
        properties:
          person_guid:
            type: string
            format: uuid
          last_name:
            maxLength: 32
            type: string
          first_name:
            maxLength: 32
            type: string
          middle_name:
            maxLength: 32
            type: string
          email_address:
            maxLength: 128
            type: string
          mobile_number:
            maxLength: 16
            type: string
          home_number:
            maxLength: 16
            type: string
          office_number:
            maxLength: 16
            type: string
          nationality:
            maxLength: 3
            type: string
          profile_dd_mode:
            maxLength: 16
            type: string
          birth_date:
            type: string
            format: date-time
            nullable: true
          govt_id_type:
            maxLength: 16
            type: string
          hashed_govt_id_number:
            maxLength: 800
            type: string
          govt_id_number:
            maxLength: 800
            type: string
          base_address_line1:
            maxLength: 48
            type: string
          base_address_line2:
            maxLength: 48
            type: string
          base_city:
            maxLength: 32
            type: string
          base_state:
            maxLength: 32
            type: string
          base_postal_code:
            maxLength: 16
            type: string
          base_country:
            maxLength: 3
            type: string
          billing_address_line1:
            maxLength: 48
            type: string
          billing_address_line2:
            maxLength: 48
            type: string
          billing_city:
            maxLength: 32
            type: string
          billing_state:
            maxLength: 32
            type: string
          billing_postal_code:
            maxLength: 16
            type: string
          billing_country:
            maxLength: 3
            type: string
          mailing_address_line1:
            maxLength: 48
            type: string
          mailing_address_line2:
            maxLength: 48
            type: string
          mailing_city:
            maxLength: 32
            type: string
          mailing_state:
            maxLength: 32
            type: string
          mailing_postal_code:
            maxLength: 16
            type: string
          mailing_country:
            maxLength: 3
            type: string
          person_status:
            maxLength: 16
            type: string
          verfication_mode:
            maxLength: 16
            type: string
            nullable: true
          verfication_level:
            maxLength: 16
            type: string
            nullable: true
          person_forget_mode:
            maxLength: 3
            type: string
          person_forget_mode_date:
            type: string
            format: date-time
          market_notification_optin:
            maxLength: 3
            type: string
          market_notification_optin_date:
            type: string
            format: date-time
          address_lat:
            type: number
            format: double
          address_lon:
            type: number
            format: double
          contact_type:
            maxLength: 16
            type: string
          private_data_key_token:
            maxLength: 8000
            type: string
          key_ref:
            maxLength: 256
            type: string
          sys_utcinserted:
            type: string
            format: date-time
          sys_utcupdated:
            type: string
            format: date-time
          client_reference_id:
            maxLength: 64
            type: string
            nullable: true
          mask_govt_id_number:
            maxLength: 40
            type: string
            nullable: true
          title:
            maxLength: 100
            type: string
            nullable: true
          additional_data:
            maxLength: 8000
            type: string
            nullable: true
        additionalProperties: false
      BulkOrderDetail:
        required:
        - order_count
        - order_guid
        - order_status
        - order_type
        - package_guid
        - person
        - personInfo
        - program_guid
        - shipmethod
        - sys_utcinserted
        - sys_utcupdated
        - wallet_guid
        type: object
        properties:
          order_guid:
            type: string
            format: uuid
          wallet_guid:
            type: string
            format: uuid
          package_guid:
            type: string
            format: uuid
          program_guid:
            type: string
            format: uuid
          order_type:
            maxLength: 20
            type: string
          shipmethod:
            maxLength: 20
            type: string
          signature_required:
            type: boolean
            nullable: true
          tracking_number:
            maxLength: 100
            type: string
            nullable: true
          order_count:
            type: integer
            format: int32
          order_status:
            maxLength: 40
            type: string
          order_error_code:
            maxLength: 200
            type: string
            nullable: true
          sys_utcinserted:
            type: string
            format: date-time
          sys_utcupdated:
            type: string
            format: date-time
          carrier:
            maxLength: 100
            type: string
            nullable: true
          package_name:
            type: string
            nullable: true
          count:
            type: integer
            format: int64
          personInfo:
            "$ref": "#/components/schemas/Person"
          person:
            "$ref": "#/components/schemas/BulkOrderPersonInfo"
        additionalProperties: false
      BulkOrderSummary:
        type: object
        properties:
          package_guid:
            type: string
            format: uuid
          package_name:
            maxLength: 64
            type: string
            nullable: true
          program_guid:
            type: string
            format: uuid
          program_name:
            type: string
            nullable: true
          inventory_ordered:
            type: integer
            format: int32
          inventory_inHand:
            type: integer
            format: int32
        additionalProperties: false
      BulkOrderSummarySearchResponse:
        required:
        - count
        - data
        - end_index
        - has_more
        - start_index
        type: object
        properties:
          count:
            type: integer
            format: int32
          start_index:
            type: integer
            format: int32
          end_index:
            type: integer
            format: int32
          has_more:
            type: boolean
          data:
            type: array
            items:
              "$ref": "#/components/schemas/BulkOrderSummary"
        additionalProperties: false
      CardDTOSearchResponse:
        required:
        - count
        - data
        - end_index
        - has_more
        - start_index
        type: object
        properties:
          count:
            type: integer
            format: int32
          start_index:
            type: integer
            format: int32
          end_index:
            type: integer
            format: int32
          has_more:
            type: boolean
          data:
            type: array
            items:
              "$ref": "#/components/schemas/CardDTO"
        additionalProperties: false
      FulfillmentOrderInfo:
        type: object
        properties:
          package_guid:
            type: string
            format: uuid
            nullable: true
          third_line:
            type: string
            nullable: true
          fourth_line:
            type: string
            nullable: true
          shipping_method:
            "$ref": "#/components/schemas/ShippingMethod"
          order_guid:
            type: string
            format: uuid
            nullable: true
          order_type:
            "$ref": "#/components/schemas/OrderType"
          signature_required:
            type: boolean
            nullable: true
          tracking_number:
            maxLength: 100
            type: string
            nullable: true
          discretionary_track_data:
            maxLength: 100
            type: string
            nullable: true
          order_status:
            maxLength: 40
            type: string
            nullable: true
          pin_mailer_flag:
            type: boolean
            nullable: true
          message_1:
            maxLength: 100
            type: string
            nullable: true
          message_2:
            maxLength: 100
            type: string
            nullable: true
          message_3:
            maxLength: 100
            type: string
            nullable: true
          message_4:
            maxLength: 100
            type: string
            nullable: true
          message_5:
            maxLength: 100
            type: string
            nullable: true
          message_6:
            maxLength: 100
            type: string
            nullable: true
          message_7:
            maxLength: 100
            type: string
            nullable: true
          message_8:
            maxLength: 100
            type: string
            nullable: true
        additionalProperties: false
      CardFulfillment:
        required:
        - issuance_type
        type: object
        properties:
          issuance_type:
            "$ref": "#/components/schemas/IssuanceType"
          fourth_line:
            type: string
            nullable: true
          fulfillment_order_info:
            "$ref": "#/components/schemas/FulfillmentOrderInfo"
        additionalProperties: false
      CreateCardRequest:
        required:
        - person
        - program_guid
        type: object
        properties:
          person:
            "$ref": "#/components/schemas/PersonDTO"
          wallet_guid:
            type: string
            format: uuid
          program_guid:
            type: string
            format: uuid
          months_until_expire:
            type: integer
            format: int64
          fulfillment_data:
            "$ref": "#/components/schemas/CardFulfillment"
          channel_guid:
            type: string
            format: uuid
          account_name:
            type: string
            nullable: true
        additionalProperties: false
      CreateCardResponse:
        required:
        - person
        - program_guid
        type: object
        properties:
          person:
            "$ref": "#/components/schemas/PersonDTO"
          program_guid:
            type: string
            format: uuid
          card:
            "$ref": "#/components/schemas/CardDTO"
          fulfillment_data:
            "$ref": "#/components/schemas/CardFulfillment"
          account_name:
            type: string
            nullable: true
        additionalProperties: false
      EncryptedFulfillmentDetails:
        type: object
        properties:
          card_proxy:
            type: string
            nullable: true
          payload:
            type: string
            nullable: true
        additionalProperties: false
      AssignCardDTO:
        required:
        - card
        - person
        type: object
        properties:
          person:
            "$ref": "#/components/schemas/PersonDTO"
          card:
            "$ref": "#/components/schemas/CardDTO"
        additionalProperties: false
      CardStatusDTO:
        type: object
        properties:
          status:
            "$ref": "#/components/schemas/CardStatus"
          reason_code:
            type: string
            nullable: true
          reason_description:
            type: string
            nullable: true
        additionalProperties: false
      ValidateCardDTO:
        type: object
        properties:
          card_number:
            type: string
            nullable: true
          cvx2:
            type: string
            nullable: true
          expiration_date:
            type: string
            nullable: true
          card_proxy:
            type: string
            nullable: true
          card_lastX:
            type: string
            nullable: true
        additionalProperties: false
      CardPINDTO:
        required:
        - pin
        type: object
        properties:
          reason_code:
            type: string
            nullable: true
          pin:
            maxLength: 6
            minLength: 4
            type: string
          comment:
            type: string
            nullable: true
        additionalProperties: false
      ReplaceCardStatus:
        enum:
        - LOST
        - STOLEN
        - DAMAGED
        type: string
      ReplaceFulfillmentOrderInfo:
        type: object
        properties:
          package_guid:
            type: string
            format: uuid
            nullable: true
          third_line:
            type: string
            nullable: true
          fourth_line:
            type: string
            nullable: true
          shipping_method:
            "$ref": "#/components/schemas/ShippingMethod"
          signature_required:
            type: boolean
            nullable: true
          discretionary_track_data:
            maxLength: 100
            type: string
            nullable: true
          pin_mailer_flag:
            type: boolean
            nullable: true
          message_1:
            maxLength: 100
            type: string
            nullable: true
          message_2:
            maxLength: 100
            type: string
            nullable: true
          message_3:
            maxLength: 100
            type: string
            nullable: true
          message_4:
            maxLength: 100
            type: string
            nullable: true
          message_5:
            maxLength: 100
            type: string
            nullable: true
          message_6:
            maxLength: 100
            type: string
            nullable: true
          message_7:
            maxLength: 100
            type: string
            nullable: true
          message_8:
            maxLength: 100
            type: string
            nullable: true
        additionalProperties: false
      ReplaceCardRequest:
        type: object
        properties:
          reason_code:
            type: string
            nullable: true
          status:
            "$ref": "#/components/schemas/ReplaceCardStatus"
          new_card_proxy:
            type: string
            nullable: true
          replace_fulfillment_order_info:
            "$ref": "#/components/schemas/ReplaceFulfillmentOrderInfo"
        additionalProperties: false
      ReplaceCardResponse:
        type: object
        properties:
          card:
            "$ref": "#/components/schemas/CardDTO"
          fulfillment_data:
            "$ref": "#/components/schemas/CardFulfillment"
        additionalProperties: false
      PersonCardStatusDTO:
        type: object
        properties:
          status:
            "$ref": "#/components/schemas/PersonCardStatus"
        additionalProperties: false
      IssuanceTypeRequest:
        required:
        - issuance_type
        type: object
        properties:
          issuance_type:
            "$ref": "#/components/schemas/IssuanceType"
          fourth_line:
            type: string
            nullable: true
          fulfillment_order_info:
            "$ref": "#/components/schemas/FulfillmentOrderInfo"
        additionalProperties: false
      InstitutionType:
        enum:
        - NONFINANCIAL
        - FINANCIAL
        - SERVICEPROVIDER
        type: string
      CompanyRequest:
        required:
        - address_line1
        - company_dba_city
        - company_dba_country
        - company_dba_lic_number
        - company_dba_name
        - company_dba_state
        - institution_type
        - postal_code
        type: object
        properties:
          company_guid:
            type: string
            format: uuid
            nullable: true
          company_parent:
            type: string
            format: uuid
            nullable: true
          company_dba_name:
            maxLength: 64
            type: string
          company_short_name:
            maxLength: 24
            type: string
            nullable: true
          company_dba_lic_number:
            maxLength: 24
            type: string
          address_line1:
            maxLength: 48
            type: string
          address_line2:
            maxLength: 48
            type: string
            nullable: true
          company_dba_city:
            maxLength: 32
            type: string
          company_dba_state:
            maxLength: 32
            type: string
          company_dba_country:
            maxLength: 3
            type: string
          institution_type:
            "$ref": "#/components/schemas/InstitutionType"
          postal_code:
            maxLength: 16
            type: string
        additionalProperties: false
      ProgramRequest:
        type: object
        properties:
          program_name:
            maxLength: 128
            type: string
            nullable: true
          parent_program_guid:
            type: string
            format: uuid
            nullable: true
          eft_display_name:
            maxLength: 10
            type: string
            nullable: true
          program_short_name:
            maxLength: 16
            type: string
            nullable: true
        additionalProperties: false
      CreateCompany:
        type: object
        properties:
          company:
            "$ref": "#/components/schemas/CompanyRequest"
          program:
            "$ref": "#/components/schemas/ProgramRequest"
        additionalProperties: false
      CompanyStatus:
        enum:
        - UNVERIFIED
        - CLEARED
        - SANCTIONED
        - NEGLIST
        - CERTIFIED
        type: string
      CompanyResponse:
        type: object
        properties:
          company_guid:
            type: string
            format: uuid
          company_parent:
            type: string
            format: uuid
          company_top:
            type: string
            format: uuid
          company_dba_name:
            type: string
            nullable: true
          company_short_name:
            type: string
            nullable: true
          company_dba_lic_number:
            type: string
            nullable: true
          address_line1:
            type: string
            nullable: true
          address_line2:
            type: string
            nullable: true
          company_dba_city:
            type: string
            nullable: true
          company_dba_state:
            type: string
            nullable: true
          company_dba_country:
            type: string
            nullable: true
          institution_type:
            "$ref": "#/components/schemas/InstitutionType"
          company_status:
            "$ref": "#/components/schemas/CompanyStatus"
          postal_code:
            type: string
            nullable: true
        additionalProperties: false
      ProgramResponse:
        type: object
        properties:
          program_guid:
            type: string
            format: uuid
          program_name:
            type: string
            nullable: true
          program_short_name:
            type: string
            nullable: true
          eft_display_name:
            type: string
            nullable: true
          parent_program_guid:
            type: string
            format: uuid
          top_program_guid:
            type: string
            format: uuid
          company_guid:
            type: string
            format: uuid
          program_group_guid:
            type: string
            format: uuid
            nullable: true
        additionalProperties: false
      CompanyProgramDTO:
        type: object
        properties:
          company:
            "$ref": "#/components/schemas/CompanyResponse"
          program:
            "$ref": "#/components/schemas/ProgramResponse"
        additionalProperties: false
      UpdateCompanyRequest:
        type: object
        properties:
          company_parent:
            type: string
            format: uuid
            nullable: true
          company_dba_name:
            maxLength: 64
            type: string
            nullable: true
          company_short_name:
            maxLength: 24
            type: string
            nullable: true
          company_dba_lic_number:
            maxLength: 24
            type: string
            nullable: true
          address_line1:
            maxLength: 48
            type: string
            nullable: true
          address_line2:
            maxLength: 48
            type: string
            nullable: true
          company_dba_city:
            maxLength: 32
            type: string
            nullable: true
          company_dba_state:
            maxLength: 32
            type: string
            nullable: true
          company_dba_country:
            maxLength: 3
            type: string
            nullable: true
          institution_type:
            "$ref": "#/components/schemas/InstitutionType"
          company_status:
            "$ref": "#/components/schemas/CompanyStatus"
          postal_code:
            maxLength: 16
            type: string
            nullable: true
        additionalProperties: false
      UpdateCompany:
        type: object
        properties:
          company:
            "$ref": "#/components/schemas/UpdateCompanyRequest"
        additionalProperties: false
      CompanyDTO:
        type: object
        properties:
          company:
            "$ref": "#/components/schemas/CompanyResponse"
        additionalProperties: false
      DisbursementType:
        enum:
        - CARD
        - OUTSIDEINSTRUMENT
        - USERSELECT
        - ACCOUNT
        type: string
      InstrumentCategory:
        enum:
        - INDIVIDUAL
        - CORPORATE
        type: string
      CardAccount:
        required:
        - card_number
        - expiration_date
        - verification_code
        type: object
        properties:
          card_number:
            maxLength: 19
            minLength: 13
            type: string
          expiration_date:
            maxLength: 7
            minLength: 5
            type: string
          verification_code:
            maxLength: 5
            minLength: 3
            type: string
        additionalProperties: false
      AccountInfo:
        type: object
        properties:
          card_account:
            "$ref": "#/components/schemas/CardAccount"
          bank_account:
            "$ref": "#/components/schemas/BankAccount"
        additionalProperties: false
      Acknowledgement:
        type: object
        properties:
          tc_version:
            type: string
            nullable: true
          acknowledgement_date:
            type: string
            nullable: true
          ip_address:
            type: string
            nullable: true
        additionalProperties: false
      DisbursementOutsideInstrument:
        required:
        - account_details
        - instrument_category
        - instrument_country
        - instrument_type
        - person_guid
        type: object
        properties:
          person_guid:
            type: string
            format: uuid
          outside_instrument_guid:
            type: string
            format: uuid
          instrument_country:
            type: string
          instrument_type:
            "$ref": "#/components/schemas/InstrumentType"
          instrument_name:
            maxLength: 32
            type: string
            nullable: true
          instrument_settlement_currency:
            maxLength: 3
            type: string
            nullable: true
          instrument_category:
            "$ref": "#/components/schemas/InstrumentCategory"
          instrument_usage:
            maxLength: 12
            type: string
            nullable: true
          mask_account_number:
            maxLength: 19
            type: string
            nullable: true
          account_details:
            "$ref": "#/components/schemas/AccountInfo"
          outside_iin:
            maxLength: 19
            type: string
            nullable: true
          financial_inst_name:
            maxLength: 32
            type: string
            nullable: true
          external_proxy_number:
            maxLength: 64
            type: string
            nullable: true
          instrument_verification_method:
            maxLength: 8
            type: string
            nullable: true
          instrument_status:
            "$ref": "#/components/schemas/InstrumentStatus"
          acknowledgement:
            "$ref": "#/components/schemas/Acknowledgement"
        additionalProperties: false
      TransferType:
        enum:
        - UNKNOWN
        - CARDTOCARD
        - PARTNERTOCARD
        - CARDTOPARTNER
        - PARTNERTOPARTNER
        - ACCOUNTTOACCOUNT
        - ACCOUNTTOBANK
        - BANKTOACCOUNT
        - CHECKLOAD
        - CHECKUNLOAD
        - CARDTOPARTNER_UNLOADTOZERO
        - CCDCTOACCOUNT
        - ACCOUNTTOCCDC
        - ACCOUNTTOBANKREALTIME
        - BANKTOACCOUNTREQUESTREALTIME
        - ACCOUNTTOCHECK
        type: string
      ConversionFees:
        type: object
        properties:
          name:
            type: string
            nullable: true
          amount:
            type: number
            format: double
          currency:
            type: string
            nullable: true
        additionalProperties: false
      ConversionDetails:
        type: object
        properties:
          reference:
            type: string
            nullable: true
          conversion_rate:
            type: number
            format: double
          from_currency:
            type: string
            nullable: true
          to_currency:
            type: string
            nullable: true
          from_amount:
            type: number
            format: double
          to_amount:
            type: number
            format: double
          expiry_seconds:
            type: integer
            format: int64
        additionalProperties: false
      QuoteResponse:
        type: object
        properties:
          source:
            "$ref": "#/components/schemas/TransferDetail"
          destination:
            "$ref": "#/components/schemas/TransferDetail"
          fees:
            type: array
            items:
              "$ref": "#/components/schemas/ConversionFees"
            nullable: true
          conversionDetails:
            "$ref": "#/components/schemas/ConversionDetails"
        additionalProperties: false
      DisbursementTransferRequest:
        required:
        - amount
        - client_reference_id
        - currency
        - destination
        - source
        - transfer_type
        type: object
        properties:
          client_reference_id:
            type: string
          destination:
            "$ref": "#/components/schemas/TransferDetail"
          transfer_type:
            "$ref": "#/components/schemas/TransferType"
          amount:
            type: number
            format: double
          currency:
            maxLength: 3
            minLength: 3
            type: string
          description:
            maxLength: 48
            minLength: 0
            type: string
            nullable: true
          source:
            "$ref": "#/components/schemas/TransferDetail"
          quote_reference:
            type: string
            nullable: true
          quoteoutput:
            "$ref": "#/components/schemas/QuoteResponse"
          destination_amount:
            type: number
            format: double
          destination_currency:
            type: string
            nullable: true
          verification_code:
            type: string
            nullable: true
        additionalProperties: false
      DisbursementDTO:
        required:
        - disbursement_type
        - person_details
        - program_guid
        - transfer_details
        type: object
        properties:
          program_guid:
            type: string
            format: uuid
          disbursement_type:
            "$ref": "#/components/schemas/DisbursementType"
          person_details:
            "$ref": "#/components/schemas/PersonDTO"
          instrument_details:
            "$ref": "#/components/schemas/DisbursementOutsideInstrument"
          transfer_details:
            "$ref": "#/components/schemas/DisbursementTransferRequest"
          card_details:
            "$ref": "#/components/schemas/CardFulfillment"
          user_guid:
            type: string
            format: uuid
          company_guid:
            type: string
            format: uuid
          source_code:
            type: string
            nullable: true
        additionalProperties: false
      DisbursementPayoutPreference:
        type: object
        properties:
          person_guid:
            type: string
            format: uuid
          payoutpreference:
            type: string
            nullable: true
        additionalProperties: false
      DisbursementResponse:
        type: object
        properties:
          payment_guid:
            type: string
            format: uuid
          disbursementDTO:
            "$ref": "#/components/schemas/DisbursementDTO"
          disbursementPayoutPreference:
            "$ref": "#/components/schemas/DisbursementPayoutPreference"
        additionalProperties: false
      DisbursementPayoutOptions:
        enum:
        - PREPAIDCARD
        - BANKDDA
        - OCT
        - NONE
        type: string
      FeesResponse:
        type: object
        properties:
          request_code:
            type: string
            nullable: true
          request_code_description:
            type: string
            nullable: true
          fee_request_code:
            type: string
            nullable: true
          fee_request_description:
            type: string
            nullable: true
          fee_amount:
            type: number
            format: double
          fee_percent:
            type: number
            format: double
          fee_applyto:
            type: string
            nullable: true
        additionalProperties: false
      FeeSourceDetail:
        type: object
        properties:
          account_guid:
            type: string
            format: uuid
            nullable: true
          wallet_guid:
            type: string
            format: uuid
            nullable: true
          wallet_id:
            type: string
            nullable: true
          card_proxy:
            type: string
            nullable: true
        additionalProperties: false
      ApplyFeeRequest:
        required:
        - amount
        - client_reference_id
        - currency
        - request_code
        - source
        type: object
        properties:
          request_code:
            type: string
          amount:
            type: number
            format: double
          currency:
            maxLength: 3
            minLength: 3
            type: string
          description:
            maxLength: 48
            minLength: 0
            type: string
            nullable: true
          client_reference_id:
            type: string
          source:
            "$ref": "#/components/schemas/FeeSourceDetail"
          revenue_account_guid:
            type: string
            format: uuid
            nullable: true
          allow_partial:
            type: boolean
            nullable: true
        additionalProperties: false
      ApplyFeeResponse:
        required:
        - amount
        - client_reference_id
        - currency
        - source
        type: object
        properties:
          txn_guid:
            type: string
            format: uuid
          request_code:
            type: string
            nullable: true
          amount:
            type: number
            format: double
          currency:
            type: string
          description:
            type: string
            nullable: true
          source:
            "$ref": "#/components/schemas/FeeSourceDetail"
          revenue_account_guid:
            type: string
            format: uuid
          ledger_balance:
            type: number
            format: double
          available_balance:
            type: number
            format: double
          partial:
            type: boolean
          client_reference_id:
            type: string
        additionalProperties: false
      OutsideInstrumentDTO:
        required:
        - account_details
        - instrument_category
        - instrument_country
        - instrument_type
        - person_guid
        type: object
        properties:
          outside_instrument_guid:
            type: string
            format: uuid
          person_guid:
            type: string
            format: uuid
          instrument_country:
            type: string
          instrument_type:
            "$ref": "#/components/schemas/InstrumentType"
          instrument_name:
            maxLength: 32
            type: string
            nullable: true
          instrument_settlement_currency:
            maxLength: 3
            type: string
            nullable: true
          instrument_category:
            "$ref": "#/components/schemas/InstrumentCategory"
          instrument_usage:
            maxLength: 12
            type: string
            nullable: true
          mask_account_number:
            maxLength: 19
            type: string
            nullable: true
          account_details:
            "$ref": "#/components/schemas/AccountInfo"
          outside_iin:
            maxLength: 19
            type: string
            nullable: true
          financial_inst_name:
            maxLength: 32
            type: string
            nullable: true
          external_proxy_number:
            maxLength: 64
            type: string
            nullable: true
          instrument_verification_method:
            maxLength: 8
            type: string
            nullable: true
          instrument_status:
            "$ref": "#/components/schemas/InstrumentStatus"
          acknowledgement:
            "$ref": "#/components/schemas/Acknowledgement"
        additionalProperties: false
      OutsideInstrumentDTOSearchResponse:
        required:
        - count
        - data
        - end_index
        - has_more
        - start_index
        type: object
        properties:
          count:
            type: integer
            format: int32
          start_index:
            type: integer
            format: int32
          end_index:
            type: integer
            format: int32
          has_more:
            type: boolean
          data:
            type: array
            items:
              "$ref": "#/components/schemas/OutsideInstrumentDTO"
        additionalProperties: false
      StatusInstrumentRequest:
        type: object
        properties:
          instrument_status:
            "$ref": "#/components/schemas/InstrumentStatus"
        additionalProperties: false
      OutsideInstrumentVerifyDTO:
        type: object
        properties:
          outside_instrument_guid:
            type: string
            format: uuid
          verify_amount1:
            type: number
            format: double
          verify_amount2:
            type: number
            format: double
        additionalProperties: false
      IA_CardAuth:
        type: object
        properties:
          card_auth_txn_guid:
            type: string
            format: uuid
          request_code:
            type: string
            nullable: true
          response_code:
            type: string
            nullable: true
          reason_code:
            type: string
            nullable: true
          channel_name:
            type: string
            nullable: true
          circuit_id:
            type: string
            nullable: true
          mask_pan:
            type: string
            nullable: true
          message_type:
            type: string
            nullable: true
          processing_code:
            type: string
            nullable: true
          txn_amount:
            type: number
            format: double
          settle_amount:
            type: number
            format: double
          billng_amount:
            type: number
            format: double
          transmission_date:
            type: string
            format: date-time
            nullable: true
          billing_fee:
            type: number
            format: double
          settle_conv_rate:
            type: number
            format: double
            nullable: true
          billing_conv_rate:
            type: number
            format: double
            nullable: true
          stan:
            type: string
            nullable: true
          local_txn_time:
            type: string
            nullable: true
          local_txn_date:
            type: string
            format: date-time
          mcc:
            type: string
            nullable: true
          acq_inst_country_code:
            type: string
            nullable: true
          pan_country_code:
            type: string
            nullable: true
          fwd_inst_country_code:
            type: string
            nullable: true
          pos_entry_mode_pan:
            type: string
            nullable: true
          pos_entry_mode_pin:
            type: string
            nullable: true
          pos_service_code:
            type: string
            nullable: true
          pos_condition_code:
            type: string
            nullable: true
          pos_pin_capture_code:
            type: string
            nullable: true
          acq_institution_id:
            type: string
            nullable: true
          fwd_institution_id:
            type: string
            nullable: true
          retreival_reference:
            type: string
            nullable: true
          authorization_id_code:
            type: string
            nullable: true
          terminal_id:
            type: string
            nullable: true
          acceptor_id:
            type: string
            nullable: true
          acceptor_name_loc:
            type: string
            nullable: true
          additional_data_private:
            type: string
            nullable: true
          txn_currency_code:
            type: string
            nullable: true
          settle_currency_code:
            type: string
            nullable: true
          billing_currency_code:
            type: string
            nullable: true
          pin_data_present:
            type: integer
            format: int32
          additional_amounts:
            type: string
            nullable: true
          pos_entry_cond_description:
            type: string
            nullable: true
          cvx2_indicator:
            type: string
            nullable: true
          cvx2_result:
            type: string
            nullable: true
          avs_indicator:
            type: string
            nullable: true
          avs_result:
            type: string
            nullable: true
          partial_auth_ind:
            type: string
            nullable: true
          acceptor_country:
            type: string
            nullable: true
          original_amount:
            type: number
            format: double
            nullable: true
          threeds_response:
            type: string
            nullable: true
          network_id:
            type: string
            nullable: true
          addtional_transaction_data:
            type: string
            nullable: true
        additionalProperties: false
      IA_Card:
        type: object
        properties:
          wallet_guid:
            type: string
            format: uuid
          program_guid:
            type: string
            format: uuid
          card_proxy:
            type: string
            nullable: true
          mask_card_pan:
            type: string
            nullable: true
          card_status:
            type: string
            nullable: true
          issuance_type:
            type: string
            nullable: true
          expiration_date:
            type: string
            format: date-time
          logical_expiration_date:
            type: string
            format: date-time
        additionalProperties: false
      IA_Account:
        type: object
        properties:
          account_guid:
            type: string
            format: uuid
          account_type:
            type: string
            nullable: true
          account_currency:
            type: string
            nullable: true
          available_balance:
            type: number
            format: double
          ledger_balance:
            type: number
            format: double
          suspense_balance:
            type: number
            format: double
          account_status:
            type: string
            nullable: true
        additionalProperties: false
      IA_Person:
        type: object
        properties:
          person_guid:
            type: string
            format: uuid
          billing_address_line1:
            type: string
            nullable: true
          billing_address_line2:
            type: string
            nullable: true
          billing_city:
            type: string
            nullable: true
          billing_state:
            type: string
            nullable: true
          billing_postal_code:
            type: string
            nullable: true
          billing_country:
            type: string
            nullable: true
          verification_mode:
            type: string
            nullable: true
          verification_level:
            type: string
            nullable: true
        additionalProperties: false
      PF_Account:
        type: object
        properties:
          account_guid:
            type: string
            format: uuid
          account_type:
            type: string
            nullable: true
          account_currency:
            type: string
            nullable: true
          available_balance:
            type: number
            format: double
          ledger_balance:
            type: number
            format: double
          suspense_balance:
            type: number
            format: double
          account_status:
            type: string
            nullable: true
        additionalProperties: false
      IA_Fees:
        type: object
        properties:
          account_guid:
            type: string
            format: uuid
          fee_request_code:
            type: string
            nullable: true
          fee_request_description:
            type: string
            nullable: true
          fee_amount:
            type: number
            format: double
        additionalProperties: false
      InteractAuthRequest:
        type: object
        properties:
          cardAuth:
            "$ref": "#/components/schemas/IA_CardAuth"
          ia_card:
            "$ref": "#/components/schemas/IA_Card"
          ia_account:
            "$ref": "#/components/schemas/IA_Account"
          ia_person:
            "$ref": "#/components/schemas/IA_Person"
          pf_account:
            "$ref": "#/components/schemas/PF_Account"
          avs_data:
            type: string
            nullable: true
          fees:
            type: array
            items:
              "$ref": "#/components/schemas/IA_Fees"
            nullable: true
          total_fee_amount:
            type: number
            format: double
          tolerance_amount:
            type: number
            format: double
          orig_txn_guid:
            type: string
            format: uuid
          orig_card_auth_txn_guid:
            type: string
            format: uuid
          total_request_amount:
            type: number
            format: double
          txn_sign:
            type: integer
            format: int32
          version:
            type: string
            nullable: true
        additionalProperties: false
      InteractAuthResponse:
        type: object
        properties:
          response_code:
            type: string
            nullable: true
          reason_code:
            type: string
            nullable: true
          pf_account_guid:
            type: string
            format: uuid
            nullable: true
          partial_auth_amount:
            type: number
            format: double
            nullable: true
          avs_result:
            type: string
            nullable: true
        additionalProperties: false
      IA_Message:
        type: object
        properties:
          post_date:
            type: string
            format: date-time
          settle_date:
            type: string
            format: date-time
          txn_date:
            type: string
            format: date-time
          channel_name:
            type: string
            nullable: true
          request_code:
            type: string
            nullable: true
          response_code:
            type: string
            nullable: true
          reason_code:
            type: string
            nullable: true
          account_type:
            type: string
            nullable: true
          instrument_type:
            type: string
            nullable: true
          card_proxy:
            type: string
            nullable: true
          mask_account_number:
            type: string
            nullable: true
          amount:
            type: number
            format: double
          original_amount:
            type: number
            format: double
          variance_amount:
            type: number
            format: double
          variance_code:
            type: string
            nullable: true
          cashback_amount:
            type: number
            format: double
          txn_amount:
            type: number
            format: double
          txn_currency:
            type: string
            nullable: true
          account_currency:
            type: string
            nullable: true
          currency_conv_rate:
            type: number
            format: double
          reference_number:
            type: string
            nullable: true
          mcc:
            type: string
            nullable: true
          acceptor_id:
            type: string
            nullable: true
          txn_location:
            type: string
            nullable: true
          txn_city:
            type: string
            nullable: true
          txn_country:
            type: string
            nullable: true
          txn_lat:
            type: number
            format: double
          txn_lon:
            type: number
            format: double
          txn_description:
            type: string
            nullable: true
          account_guid:
            type: string
            format: uuid
          card_txn_guid:
            type: string
            format: uuid
            nullable: true
          card_settle_txn_guid:
            type: string
            format: uuid
            nullable: true
          program_guid:
            type: string
            format: uuid
          pf_account_guid:
            type: string
            format: uuid
            nullable: true
          orig_card_auth_txn_guid:
            type: string
            format: uuid
            nullable: true
          version:
            type: string
            nullable: true
        additionalProperties: false
      auth_request_type:
        enum:
        - PURCHASE
        - ECOMM
        - PREAUTH
        - PREAUTHCOMPLETION
        - ATM
        - REFUND
        - OCTIN
        - CASHIN
        type: string
      IA_Auth_SimuMsg:
        required:
        - amount
        - auth_request_type
        type: object
        properties:
          auth_request_type:
            "$ref": "#/components/schemas/auth_request_type"
          amount:
            type: number
            description: amount
            format: double
          card_proxy:
            type: string
            description: card proxy
            nullable: true
          mcc:
            type: string
            description: mcc
            nullable: true
          acceptor_id:
            type: string
            description: acceptor id
            nullable: true
          client_url:
            type: string
            description: client url
            nullable: true
          client_secret:
            type: string
            description: client secret
            nullable: true
        additionalProperties: false
      PaymentDetails:
        type: object
        properties:
          account_guid:
            type: string
            format: uuid
            nullable: true
          person_guid:
            type: string
            format: uuid
            nullable: true
          card_proxy:
            type: string
            nullable: true
          wallet_guid:
            type: string
            format: uuid
            nullable: true
          outside_instrument_guid:
            type: string
            format: uuid
            nullable: true
          preferred_transfer_type:
            type: string
            nullable: true
        additionalProperties: false
      PaymentRequestCode:
        enum:
        - PT_TOPUP
        - PT_COLLECTION
        - PT_ACCOUNTDISB
        type: string
      PaymentScheduleType:
        enum:
        - IMMEDIATE
        - CALENDARREPEAT
        - CONDITIONAL
        type: string
      Frequency:
        enum:
        - DAY
        - WEEK
        - MONTH
        - YEAR
        - QUARTER
        - BIWEEK
        type: string
      PaymentScheduleRequest:
        type: object
        properties:
          payment_schedule_type:
            "$ref": "#/components/schemas/PaymentScheduleType"
          frequency:
            "$ref": "#/components/schemas/Frequency"
          period_value:
            type: integer
            format: int32
            nullable: true
          repeat_until_date:
            type: string
            format: date-time
          payment_start_date:
            type: string
            format: date-time
          schedule_guid:
            type: string
            format: uuid
            nullable: true
        additionalProperties: false
      PaymentRequest:
        required:
        - payment_base_currency
        - payment_due_date
        - reference_code
        type: object
        properties:
          payer:
            type: array
            items:
              "$ref": "#/components/schemas/PaymentDetails"
            nullable: true
          payee:
            type: array
            items:
              "$ref": "#/components/schemas/PaymentDetails"
            nullable: true
          payment_amount:
            type: number
            format: double
          payment_base_currency:
            minLength: 3
            type: string
          payment_description:
            type: string
            nullable: true
          payment_request_code:
            "$ref": "#/components/schemas/PaymentRequestCode"
          payment_balance:
            type: number
            format: double
          payment_guid:
            type: string
            format: uuid
            nullable: true
          payment_chain:
            type: string
            format: uuid
            nullable: true
          response_code:
            maxLength: 16
            type: string
            nullable: true
          reason_code:
            type: string
            nullable: true
          requestor_wallet_guid:
            type: string
            format: uuid
            nullable: true
          payment_due_date:
            type: string
            format: date-time
          reference_code:
            maxLength: 32
            type: string
          payment_schedule:
            "$ref": "#/components/schemas/PaymentScheduleRequest"
        additionalProperties: false
      PaymentResponse:
        required:
        - payment_base_currency
        - payment_due_date
        - reference_code
        type: object
        properties:
          payer:
            "$ref": "#/components/schemas/PaymentDetails"
          payee:
            "$ref": "#/components/schemas/PaymentDetails"
          payment_amount:
            type: number
            format: double
          payment_base_currency:
            minLength: 3
            type: string
          payment_description:
            type: string
            nullable: true
          payment_request_code:
            type: string
            nullable: true
          payment_balance:
            type: number
            format: double
          payment_guid:
            type: string
            format: uuid
            nullable: true
          payment_chain:
            type: string
            format: uuid
          response_code:
            maxLength: 16
            type: string
            nullable: true
          reason_code:
            maxLength: 16
            type: string
            nullable: true
          requestor_wallet_guid:
            type: string
            format: uuid
          payment_status:
            maxLength: 16
            type: string
            nullable: true
          payment_due_date:
            type: string
            format: date-time
          reference_code:
            maxLength: 32
            type: string
          payment_schedule:
            "$ref": "#/components/schemas/PaymentScheduleRequest"
        additionalProperties: false
      PaymentScheduleReq:
        required:
        - frequency
        - period_value
        - schedule_guid
        - start_date
        type: object
        properties:
          schedule_guid:
            type: string
            format: uuid
          frequency:
            maxLength: 16
            type: string
          period_value:
            type: integer
            format: int32
          start_date:
            type: string
            format: date-time
          until_date:
            type: string
            format: date-time
          schedule_status:
            maxLength: 16
            type: string
            nullable: true
          payment_window:
            maxLength: 50
            type: string
            nullable: true
          payment_schedule_type:
            type: string
            nullable: true
        additionalProperties: false
      PaymentResponseDet:
        required:
        - payment_base_currency
        - payment_due_date
        - reference_code
        type: object
        properties:
          payer:
            type: array
            items:
              "$ref": "#/components/schemas/PaymentDetails"
            nullable: true
          payee:
            type: array
            items:
              "$ref": "#/components/schemas/PaymentDetails"
            nullable: true
          payment_amount:
            type: number
            format: double
          payment_base_currency:
            minLength: 3
            type: string
          payment_description:
            type: string
            nullable: true
          payment_request_code:
            type: string
            nullable: true
          payment_balance:
            type: number
            format: double
          payment_guid:
            type: string
            format: uuid
            nullable: true
          response_code:
            maxLength: 16
            type: string
            nullable: true
          reason_code:
            maxLength: 16
            type: string
            nullable: true
          requestor_wallet_guid:
            type: string
            format: uuid
            nullable: true
          payment_status:
            maxLength: 16
            type: string
            nullable: true
          payment_due_date:
            type: string
            format: date-time
          reference_code:
            maxLength: 32
            type: string
          payment_schedule:
            "$ref": "#/components/schemas/PaymentScheduleReq"
        additionalProperties: false
      PaymentResponseDetSearchResponse:
        required:
        - count
        - data
        - end_index
        - has_more
        - start_index
        type: object
        properties:
          count:
            type: integer
            format: int32
          start_index:
            type: integer
            format: int32
          end_index:
            type: integer
            format: int32
          has_more:
            type: boolean
          data:
            type: array
            items:
              "$ref": "#/components/schemas/PaymentResponseDet"
        additionalProperties: false
      PaymentTransactionsResponseDet:
        required:
        - payment_date
        - payment_guid
        - schedule_guid
        - txn_guid
        type: object
        properties:
          payment_guid:
            type: string
            format: uuid
          schedule_guid:
            type: string
            format: uuid
          payment_date:
            type: string
            format: date-time
          response_code:
            maxLength: 50
            type: string
            nullable: true
          reason_code:
            maxLength: 50
            type: string
            nullable: true
          txn_guid:
            type: string
            format: uuid
          amount:
            type: number
            format: double
          error_description:
            type: string
            nullable: true
        additionalProperties: false
      PaymentTransactionsResponseDetSearchResponse:
        required:
        - count
        - data
        - end_index
        - has_more
        - start_index
        type: object
        properties:
          count:
            type: integer
            format: int32
          start_index:
            type: integer
            format: int32
          end_index:
            type: integer
            format: int32
          has_more:
            type: boolean
          data:
            type: array
            items:
              "$ref": "#/components/schemas/PaymentTransactionsResponseDet"
        additionalProperties: false
      PersonSearch:
        type: object
        properties:
          person_guid:
            type: string
            format: uuid
          first_name:
            type: string
            nullable: true
          last_name:
            type: string
            nullable: true
          client_reference_id:
            type: string
            nullable: true
          email_address:
            type: string
            nullable: true
          mobile_number:
            type: string
            nullable: true
          company_short_name:
            type: string
            nullable: true
          birth_date:
            type: string
            format: date-time
          home_number:
            type: string
            nullable: true
          wallet_id:
            type: string
            nullable: true
          card_number:
            type: string
            nullable: true
          card_proxy:
            type: string
            nullable: true
          govt_id_number:
            type: string
            nullable: true
          customer_search:
            type: string
            nullable: true
          user_guid:
            type: string
            format: uuid
          account_guid:
            type: string
            format: uuid
          contact_type:
            type: string
            nullable: true
          title:
            type: string
            nullable: true
          limit:
            type: integer
            format: int32
          start_index:
            type: integer
            format: int32
          wallet_guid:
            type: string
            format: uuid
          company_guid:
            type: string
            format: uuid
        additionalProperties: false
      PersonDTOSearchResponse:
        required:
        - count
        - data
        - end_index
        - has_more
        - start_index
        type: object
        properties:
          count:
            type: integer
            format: int32
          start_index:
            type: integer
            format: int32
          end_index:
            type: integer
            format: int32
          has_more:
            type: boolean
          data:
            type: array
            items:
              "$ref": "#/components/schemas/PersonDTO"
        additionalProperties: false
      CreatePersonRequest:
        required:
        - person_details
        - program_guid
        type: object
        properties:
          create_account:
            type: boolean
          person_details:
            "$ref": "#/components/schemas/PersonDTO"
          account_currencies:
            type: array
            items:
              type: string
            nullable: true
          program_guid:
            type: string
            format: uuid
          account_type:
            "$ref": "#/components/schemas/AccountType"
          account_name:
            type: string
            nullable: true
        additionalProperties: false
      CreatePersonResponse:
        type: object
        properties:
          person_details:
            "$ref": "#/components/schemas/PersonDTO"
          outside_instruments:
            type: array
            items:
              "$ref": "#/components/schemas/OutsideInstrumentDTO"
            nullable: true
          wallets:
            type: array
            items:
              "$ref": "#/components/schemas/WalletDTO"
            nullable: true
          account_details:
            "$ref": "#/components/schemas/AccountDTO"
        additionalProperties: false
      Relationship:
        enum:
        - ASSOCIATE
        - DEPENDENT
        type: string
      CreatePersonRelationRequest:
        required:
        - holder_person_guid
        - related_person
        - relationship
        type: object
        properties:
          bypass_kyc:
            type: boolean
          holder_person_guid:
            type: string
            format: uuid
          relationship:
            "$ref": "#/components/schemas/Relationship"
          related_person:
            "$ref": "#/components/schemas/PersonDTO"
          related_program_guid:
            type: string
            format: uuid
        additionalProperties: false
      CreatePersonRelationResponse:
        type: object
        properties:
          personRelation:
            "$ref": "#/components/schemas/PersonRelation"
          related_person:
            "$ref": "#/components/schemas/PersonDTO"
        additionalProperties: false
      UpdatePersonRelationRequest:
        required:
        - holder_person_guid
        - related_person_guid
        - relationship
        type: object
        properties:
          holder_person_guid:
            type: string
            format: uuid
          related_person_guid:
            type: string
            format: uuid
          relationship:
            "$ref": "#/components/schemas/Relationship"
        additionalProperties: false
      Question:
        type: object
        properties:
          prompt:
            type: string
            nullable: true
          key:
            type: string
            nullable: true
          options:
            type: array
            items:
              type: string
            nullable: true
        additionalProperties: false
      PersonVerificationResultDetail:
        type: object
        properties:
          person_guid:
            type: string
            format: uuid
          verification_method:
            type: string
            nullable: true
          verification_date:
            type: string
            format: date-time
          document_type:
            type: string
            nullable: true
          document_path:
            type: string
            nullable: true
          response_code:
            type: string
            nullable: true
          verification_results:
            type: string
            nullable: true
          reason_code:
            type: string
            nullable: true
          questions:
            type: array
            items:
              "$ref": "#/components/schemas/Question"
            nullable: true
        additionalProperties: false
      PersonVerificationResultDTO:
        type: object
        properties:
          person_guid:
            type: string
            format: uuid
          verification_mode:
            type: string
            nullable: true
          verification_level:
            type: string
            nullable: true
          additional_desc:
            type: string
            nullable: true
          verificationResults:
            type: array
            items:
              "$ref": "#/components/schemas/PersonVerificationResultDetail"
            nullable: true
        additionalProperties: false
      Answer:
        type: object
        properties:
          key:
            type: string
            nullable: true
          answer:
            type: string
            nullable: true
        additionalProperties: false
      DocumentType:
        enum:
        - PASSPORT
        - DRIVELIC
        - NATIONAL
        - CORPORATE
        - OTHER
        type: string
      FileType:
        enum:
        - BMP
        - JPEG
        - PNG
        - PDF
        - JPG
        - TIFF
        - GIF
        - DOC
        - DOCX
        type: string
      Document:
        type: object
        properties:
          document_type:
            "$ref": "#/components/schemas/DocumentType"
          file_type:
            "$ref": "#/components/schemas/FileType"
          issuing_country:
            type: string
            nullable: true
          front:
            type: string
            nullable: true
          back:
            type: string
            nullable: true
        additionalProperties: false
      ClientVerification:
        required:
        - verification_datetime
        - verification_level
        - verification_provider
        - verification_provider_refnumber
        type: object
        properties:
          verification_datetime:
            type: string
            format: date-time
          verification_provider:
            type: string
          verification_provider_refnumber:
            type: string
          verification_level:
            type: string
          document:
            "$ref": "#/components/schemas/Document"
        additionalProperties: false
      VerificationRequest:
        type: object
        properties:
          perform_kyc:
            type: boolean
          identifications:
            type: array
            items:
              "$ref": "#/components/schemas/PersonIdentificationDTO"
            nullable: true
          answers:
            type: array
            items:
              "$ref": "#/components/schemas/Answer"
            nullable: true
          document:
            "$ref": "#/components/schemas/Document"
          client_verification:
            "$ref": "#/components/schemas/ClientVerification"
          program_guid:
            type: string
            format: uuid
        additionalProperties: false
      ReportResponse:
        type: object
        properties:
          reference_id:
            type: string
            format: uuid
          program_guid:
            type: string
            format: uuid
            nullable: true
          program_name:
            type: string
            nullable: true
          ext_name:
            type: string
            nullable: true
          status:
            type: string
            nullable: true
          filename:
            type: string
            nullable: true
          error:
            type: string
            nullable: true
        additionalProperties: false
      ReportArgumentType:
        enum:
        - GUID
        - DATE
        - NUMBER
        - TEXT
        type: string
      ReportArgs:
        required:
        - arg_name
        - arg_type
        - arg_value
        type: object
        properties:
          arg_name:
            type: string
          arg_type:
            "$ref": "#/components/schemas/ReportArgumentType"
          arg_value:
            type: string
        additionalProperties: false
      ReportRequestExt:
        required:
        - report_name
        type: object
        properties:
          report_name:
            type: string
          report_args:
            type: array
            items:
              "$ref": "#/components/schemas/ReportArgs"
            nullable: true
          overwrite_flag:
            type: string
            nullable: true
          redis_key:
            type: string
            nullable: true
          redis_url:
            type: string
            nullable: true
          reference_id:
            type: string
            format: uuid
          date_from:
            type: string
            format: date-time
            nullable: true
          date_to:
            type: string
            format: date-time
            nullable: true
        additionalProperties: false
      TransactionAuthSimRequestType:
        enum:
        - PURCHASE
        - ECOMM
        - PREAUTH
        - PREAUTHCOMPLETION
        - CASHWITHDRAWAL
        - ATMBALANCEINQUIRY
        - REFUND
        - FULLREVERSAL
        - PARTIALREVERSAL
        type: string
      PartialAuthIndicatorType:
        enum:
        - SUPPORT
        - NOSUPPORT
        type: string
      TransactionAuthSimRequest:
        required:
        - auth_request_type
        - card_proxy
        - txn_amount
        type: object
        properties:
          auth_request_type:
            "$ref": "#/components/schemas/TransactionAuthSimRequestType"
          card_proxy:
            type: string
            description: card proxy
          avs_postal_code:
            maxLength: 9
            minLength: 5
            type: string
            description: postal code used to avs data
            nullable: true
          avs_address_line_1:
            type: string
            description: address line 1 used for avs data
            nullable: true
          txn_amount:
            type: number
            description: Amount in the simulated auth message in local currency
            format: double
          txn_currency_code:
            maxLength: 3
            type: string
            description: Currency of the transaction amount; can be defaulted to 840
            nullable: true
          currency_conv_rate:
            type: number
            description: Currency conversion rate; can be defaulted to 1.000000
            format: double
          settle_amount:
            type: number
            description: Transaction amount in settlement currency
            format: double
          settle_currency_code:
            maxLength: 3
            type: string
            description: Currency in which settlement is done
            nullable: true
          cashback_amount:
            type: number
            description: Amount requested as cashback (applicable only for in purchase,
              pre-auth, and pre-auth completion requests)
            format: double
          orig_txn_amount:
            type: number
            description: Original transaction amount; required for Partial Reversal
              and Full Reversal
            format: double
            nullable: true
          partial_auth_ind:
            "$ref": "#/components/schemas/PartialAuthIndicatorType"
          mcc:
            maxLength: 4
            type: string
            description: Merchant Category Code in the simulated auth message.
            nullable: true
          channel_name:
            maxLength: 16
            type: string
            description: For MNGS and Discover; If not provided it will be defaulted
              to MNGS.
            nullable: true
          terminal_id:
            maxLength: 12
            type: string
            description: ID of the terminal
            nullable: true
          acceptor_id:
            maxLength: 16
            type: string
            description: Merchant acceptor ID in the simulated auth message. Defaults
              to pre-defined id if not provided but has to be provided (required) for
              Refund txn.
            nullable: true
          acceptor_country_code:
            maxLength: 3
            type: string
            description: Merchant’s country. Defaults to 840 if not provided.
            nullable: true
          acceptor_name_loc:
            maxLength: 40
            type: string
            description: Merchant name and location.
            nullable: true
          retrieval_reference:
            maxLength: 24
            type: string
            description: Unique number for identification; required for Preauth Completion,
              Partial Reversal, and Full Reversal
            nullable: true
          stan:
            maxLength: 12
            type: string
            description: System trace audit number. Will be built if not provided
            nullable: true
          network_id:
            maxLength: 10
            type: string
            description: network id
            nullable: true
          country_code:
            maxLength: 3
            type: string
            description: Country Code
            nullable: true
        additionalProperties: false
        description: Card Transaction Authorization Request
      FeeResponse:
        type: object
        properties:
          account_guid:
            type: string
            description: account guid
            format: uuid
          fee_request_code:
            type: string
            description: fee request code
            nullable: true
          fee_request_description:
            type: string
            description: fee request description
            nullable: true
          fee_amount:
            type: number
            description: fee amount
            format: double
          reverse_fee_request_code:
            type: string
            description: reverse fee request code
            nullable: true
          reverse_fee_request_description:
            type: string
            description: reverse fee request description
            nullable: true
        additionalProperties: false
      TransactionAuthSimResponse:
        type: object
        properties:
          card_proxy:
            type: string
            description: card proxy
            nullable: true
          card_auth_txn_guid:
            type: string
            description: card auth transaction guid
            format: uuid
            nullable: true
          request_code:
            type: string
            description: Request Code
            nullable: true
          response_code:
            type: string
            description: response code
            nullable: true
          reason_code:
            type: string
            description: reason code
            nullable: true
          txn_amount:
            type: number
            description: transaction amount
            format: double
          settle_amount:
            type: number
            description: settle amount
            format: double
            nullable: true
          billing_amount:
            type: number
            description: billing amount
            format: double
            nullable: true
          billing_fee:
            type: number
            description: billing fee
            format: double
            nullable: true
          billing_conversion_rate:
            type: number
            description: billing conversion rate
            format: double
            nullable: true
          stan:
            type: string
            description: system trace audit number
            nullable: true
          settlement_date:
            type: string
            description: settlement date
            nullable: true
          mcc:
            type: string
            description: merchant category code
            nullable: true
          channel_name:
            type: string
            description: channel name
            nullable: true
          txn_fee_amount:
            type: number
            description: transaction fee amount
            format: double
            nullable: true
          settle_fee_amount:
            type: number
            description: settle fee amount
            format: double
            nullable: true
          retrieval_reference:
            type: string
            description: retrieval reference
            nullable: true
          authorization_id_code:
            type: string
            description: Authorization Id Code
            nullable: true
          terminal_id:
            type: string
            description: terminal id
            nullable: true
          acceptor_id:
            type: string
            description: acceptor id
            nullable: true
          acceptor_name_loc:
            type: string
            description: acceptor name location
            nullable: true
          txn_currency_code:
            type: string
            description: transaction currency code
            nullable: true
          settle_currency_code:
            type: string
            description: settle currency code
            nullable: true
          billing_currency_code:
            type: string
            description: billing currency code
            nullable: true
          avs_indicator:
            type: string
            description: avs indicator
            nullable: true
          avs_result:
            type: string
            description: avs result
            nullable: true
          avs_data:
            type: string
            description: avs data
            nullable: true
          partial_auth_ind:
            type: string
            description: partial auth indicator
            nullable: true
          network_id:
            type: string
            description: network id
            nullable: true
          original_amount:
            type: number
            description: original amount
            format: double
            nullable: true
          mask_card_pan:
            type: string
            description: mask card pan
            nullable: true
          wallet_guid:
            type: string
            description: wallet guid
            format: uuid
            nullable: true
          issuance_type:
            type: string
            description: issuance type
            nullable: true
          card_status:
            type: string
            description: card status
            nullable: true
          expiration_date:
            type: string
            description: expiration date
            format: date-time
            nullable: true
          person_guid:
            type: string
            description: person guid
            format: uuid
            nullable: true
          program_guid:
            type: string
            description: program guid
            format: uuid
            nullable: true
          account_guid:
            type: string
            description: account guid
            format: uuid
            nullable: true
          account_currency:
            type: string
            description: account currency
            nullable: true
          available_balance:
            type: number
            description: available balance
            format: double
            nullable: true
          ledger_balance:
            type: number
            description: ledger balance
            format: double
            nullable: true
          suspense_balance:
            type: number
            description: suspense balance
            format: double
            nullable: true
          account_status:
            type: string
            description: account status
            nullable: true
          request_description:
            type: string
            description: request description
            nullable: true
          country_code_alpha3:
            type: string
            description: country code alpha 3
            nullable: true
          currency_code_alpha3:
            type: string
            description: currency code alpha 3
            nullable: true
          fees:
            type: array
            items:
              "$ref": "#/components/schemas/FeeResponse"
            description: list of fees
            nullable: true
          total_fee_amount:
            type: number
            description: reverse fee request description
            format: double
            nullable: true
            readOnly: true
        additionalProperties: false
        description: Card Transaction Authorization Response
      TxnLedgerDTO:
        required:
        - acceptor_id
        - account_currency
        - account_guid
        - account_type
        - amount
        - available_balance
        - cashback_amount
        - currency_conv_rate
        - instrument_type
        - ledger_balance
        - mcc
        - original_amount
        - reason_code
        - request_code
        - response_code
        - source_code
        - suspense_balance
        - txn_amount
        - txn_country
        - txn_currency
        - txn_date
        - txn_description
        - txn_guid
        - txn_lat
        - txn_location
        - txn_location_mcc
        - txn_lon
        - variance_amount
        type: object
        properties:
          txn_guid:
            type: string
            format: uuid
          post_date:
            type: string
            format: date-time
            nullable: true
          settle_date:
            type: string
            format: date-time
            nullable: true
          txn_date:
            type: string
            format: date-time
          channel_name:
            maxLength: 16
            type: string
            nullable: true
          request_code:
            maxLength: 16
            type: string
          response_code:
            maxLength: 16
            type: string
          reason_code:
            maxLength: 16
            type: string
          account_type:
            maxLength: 16
            type: string
          instrument_type:
            maxLength: 16
            type: string
          mask_account_number:
            maxLength: 13
            type: string
            nullable: true
          amount:
            type: number
            format: double
          original_amount:
            type: number
            format: double
          variance_amount:
            type: number
            format: double
          variance_code:
            maxLength: 16
            type: string
            nullable: true
          cashback_amount:
            type: number
            format: double
          txn_amount:
            type: number
            format: double
          txn_currency:
            maxLength: 3
            type: string
          account_currency:
            maxLength: 3
            type: string
          currency_conv_rate:
            type: number
            format: double
          currency_trade_markup:
            type: number
            format: double
            nullable: true
          available_balance:
            type: number
            format: double
          ledger_balance:
            type: number
            format: double
          suspense_balance:
            type: number
            format: double
          reference_number:
            maxLength: 32
            type: string
            nullable: true
          mcc:
            maxLength: 6
            type: string
          acceptor_id:
            maxLength: 19
            type: string
          txn_location:
            maxLength: 48
            type: string
          txn_location_mcc:
            maxLength: 6
            type: string
          txn_city:
            maxLength: 32
            type: string
            nullable: true
          txn_country:
            maxLength: 3
            type: string
          txn_lat:
            type: number
            format: double
          txn_lon:
            type: number
            format: double
          txn_description:
            maxLength: 48
            type: string
          account_guid:
            type: string
            format: uuid
          base_txn_guid:
            type: string
            format: uuid
          polar_txn_guid:
            type: string
            format: uuid
            nullable: true
          card_txn_guid:
            type: string
            format: uuid
            nullable: true
          card_settle_txn_guid:
            type: string
            format: uuid
            nullable: true
          acquire_txn_guid:
            type: string
            format: uuid
            nullable: true
          bank_eft_guid:
            type: string
            format: uuid
            nullable: true
          journal_guid:
            type: string
            format: uuid
            nullable: true
          source_code:
            maxLength: 16
            type: string
          source_user_guid:
            type: string
            format: uuid
          settle_amount:
            type: number
            format: double
          settle_currency_code:
            type: string
            nullable: true
          txn_status:
            type: string
            nullable: true
          outside_instrument_guid:
            type: string
            format: uuid
            nullable: true
          source_username:
            type: string
            nullable: true
          auth_available_balance:
            type: number
            format: double
          card_proxy:
            type: string
            nullable: true
          account_name:
            type: string
            nullable: true
          journal_entry:
            type: string
            nullable: true
          reason_code_description:
            type: string
            nullable: true
        additionalProperties: false
      TxnSearchDTO:
        type: object
        properties:
          limit:
            type: integer
            format: int32
          start_index:
            type: integer
            format: int32
          person_guid:
            type: string
            format: uuid
          account_guid:
            type: string
            format: uuid
          wallet_guid:
            type: string
            format: uuid
          wallet_id:
            type: string
            nullable: true
          card_proxy:
            type: string
            nullable: true
          card_number:
            type: string
            nullable: true
          start_date:
            type: string
            format: date-time
          end_date:
            type: string
            format: date-time
          txn_description:
            type: string
            nullable: true
          txn_amount_from:
            type: number
            format: double
          txn_amount_to:
            type: number
            format: double
          request_code:
            type: string
            nullable: true
          txn_days:
            type: integer
            format: int32
          mask_account_number:
            type: string
            nullable: true
          reference_number:
            type: string
            nullable: true
          txn_amount:
            type: number
            format: double
          txn_type:
            type: string
            nullable: true
          acceptor_id:
            type: string
            nullable: true
          txn_status:
            type: array
            items:
              type: string
            nullable: true
          txn_currency:
            type: string
            nullable: true
          account_currency:
            type: string
            nullable: true
          txn_guid:
            type: string
            format: uuid
        additionalProperties: false
      TxnLedgerDTOSearchResponse:
        required:
        - count
        - data
        - end_index
        - has_more
        - start_index
        type: object
        properties:
          count:
            type: integer
            format: int32
          start_index:
            type: integer
            format: int32
          end_index:
            type: integer
            format: int32
          has_more:
            type: boolean
          data:
            type: array
            items:
              "$ref": "#/components/schemas/TxnLedgerDTO"
        additionalProperties: false
      TransferRequest:
        required:
        - amount
        - client_reference_id
        - currency
        - destination
        - source
        - transfer_type
        type: object
        properties:
          client_reference_id:
            type: string
          transfer_type:
            "$ref": "#/components/schemas/TransferType"
          amount:
            type: number
            format: double
          currency:
            maxLength: 3
            minLength: 3
            type: string
          description:
            maxLength: 48
            minLength: 0
            type: string
            nullable: true
          source:
            "$ref": "#/components/schemas/TransferDetail"
          destination:
            "$ref": "#/components/schemas/TransferDetail"
          quote_reference:
            type: string
            nullable: true
          quoteoutput:
            "$ref": "#/components/schemas/QuoteResponse"
          destination_amount:
            type: number
            format: double
          destination_currency:
            type: string
            nullable: true
          verification_code:
            type: string
            nullable: true
        additionalProperties: false
      TransferReversalRequest:
        type: object
        properties:
          transfer_type:
            "$ref": "#/components/schemas/TransferType"
          amount:
            type: number
            format: double
          currency:
            maxLength: 3
            minLength: 3
            type: string
            nullable: true
          client_reference_id:
            type: string
            nullable: true
          source_txn_guid:
            type: string
            format: uuid
          reason_description:
            type: string
            nullable: true
        additionalProperties: false
      TransferReversalResponse:
        type: object
        properties:
          transfer_type:
            "$ref": "#/components/schemas/TransferType"
          amount:
            type: number
            format: double
          currency:
            type: string
            nullable: true
          client_reference_id:
            type: string
            nullable: true
          source_txn_guid:
            type: string
            format: uuid
        additionalProperties: false
      QuoteRequest:
        type: object
        properties:
          source:
            "$ref": "#/components/schemas/TransferDetail"
          destination:
            "$ref": "#/components/schemas/TransferDetail"
          amount:
            type: number
            format: double
          currency:
            type: string
            nullable: true
          destination_amount:
            type: number
            format: double
          destination_currency:
            type: string
            nullable: true
        additionalProperties: false
      RTPRefundRequest:
        required:
        - txn_guid
        type: object
        properties:
          txn_guid:
            type: string
            format: uuid
        additionalProperties: false
      BankEftEntry:
        required:
        - bank_eft_guid
        - channel_name
        - payment_date
        - reason_code
        - reference_number
        - request_code
        - response_code
        - txn_amount
        - txn_currency_code
        - txn_date
        type: object
        properties:
          bank_eft_guid:
            type: string
            format: uuid
          channel_name:
            type: string
          request_code:
            type: string
          response_code:
            type: string
          reason_code:
            type: string
          txn_amount:
            type: number
            format: double
          txn_currency_code:
            type: string
          txn_date:
            type: string
            format: date-time
          payment_date:
            type: string
            format: date-time
          reference_number:
            type: string
          beneficiary_instrument_guid:
            type: string
            format: uuid
            nullable: true
          payer_instrument_guid:
            type: string
            format: uuid
            nullable: true
          orig_account_guid:
            type: string
            format: uuid
            nullable: true
          recv_account_guid:
            type: string
            format: uuid
            nullable: true
        additionalProperties: false
      RTPBankApprovalRequest:
        required:
        - txn_guid
        type: object
        properties:
          txn_guid:
            type: string
            format: uuid
        additionalProperties: false
      OperationName:
        enum:
        - SPENDINGLIMIT
        - CASHLIMIT
        - LOADLIMIT
        - CARDLOADLIMIT
        type: string
      OperationCategories:
        enum:
        - LIMITS
        - FEES
        - OUTOFBAND
        - RENEW
        type: string
      TimeUnit:
        enum:
        - TranAmount
        - TranAmountMin
        - Daily
        - Weekly
        - Monthly
        - Quarterly
        - Yearly
        type: string
      ProcessOperationConditionsRequest:
        required:
        - amount_limit
        type: object
        properties:
          condition_guid:
            type: string
            format: uuid
          program_guid:
            type: string
            format: uuid
            nullable: true
          account_guid:
            type: string
            format: uuid
            nullable: true
          amount_limit:
            type: number
            format: double
          card_proxy:
            type: string
            nullable: true
          currency:
            type: string
            nullable: true
          operation_name:
            "$ref": "#/components/schemas/OperationName"
          operation_categories:
            "$ref": "#/components/schemas/OperationCategories"
          time_unit:
            "$ref": "#/components/schemas/TimeUnit"
          expiry_limit_mins:
            type: integer
            format: int32
        additionalProperties: false
      ProcessOperationConditionsResponse:
        required:
        - amount_limit
        type: object
        properties:
          condition_guid:
            type: string
            format: uuid
          program_guid:
            type: string
            format: uuid
            nullable: true
          account_guid:
            type: string
            format: uuid
            nullable: true
          amount_limit:
            type: number
            format: double
          account_expiry_date:
            type: string
            format: date-time
            nullable: true
          card_proxy:
            type: string
            nullable: true
          currency:
            type: string
            nullable: true
          operation_name:
            "$ref": "#/components/schemas/OperationName"
          operation_categories:
            "$ref": "#/components/schemas/OperationCategories"
          time_unit:
            "$ref": "#/components/schemas/TimeUnit"
          expiry_limit_mins:
            type: integer
            format: int32
        additionalProperties: false
      VelocityLimitDTO:
        type: object
        properties:
          condition_guid:
            type: string
            format: uuid
          program_guid:
            type: string
            format: uuid
            nullable: true
          account_guid:
            type: string
            format: uuid
            nullable: true
          amount_limit:
            type: number
            format: double
          card_proxy:
            type: string
            nullable: true
          currency:
            type: string
            nullable: true
          operation_name:
            type: string
            nullable: true
          operation_categories:
            type: string
            nullable: true
          time_unit:
            type: string
            nullable: true
          expiry_limit_mins:
            type: string
            nullable: true
        additionalProperties: false
      WalletDTOSearchResponse:
        required:
        - count
        - data
        - end_index
        - has_more
        - start_index
        type: object
        properties:
          count:
            type: integer
            format: int32
          start_index:
            type: integer
            format: int32
          end_index:
            type: integer
            format: int32
          has_more:
            type: boolean
          data:
            type: array
            items:
              "$ref": "#/components/schemas/WalletDTO"
        additionalProperties: false
      CreateWalletRequest:
        type: object
        properties:
          account_currencies:
            type: array
            items:
              type: string
            nullable: true
          person_guid:
            type: string
            format: uuid
          program_guid:
            type: string
            format: uuid
        additionalProperties: false
      ChangeProgramRequest:
        required:
        - destination_program_guid
        type: object
        properties:
          card_proxy:
            type: string
            nullable: true
          wallet_guid:
            type: string
            format: uuid
          wallet_id:
            maxLength: 19
            type: string
            nullable: true
          destination_program_guid:
            type: string
            format: uuid
        additionalProperties: false
      ChangeProgramResponse:
        required:
        - card_proxy
        - destination_program_guid
        - wallet_guid
        - wallet_id
        type: object
        properties:
          card_proxy:
            type: string
          wallet_guid:
            type: string
            format: uuid
          wallet_id:
            maxLength: 19
            type: string
          destination_program_guid:
            type: string
            format: uuid
          person:
            "$ref": "#/components/schemas/PersonDTO"
        additionalProperties: false
      NotificationConfigurationDTO:
        required:
        - event_type
        - program_guid
        - url
        type: object
        properties:
          notification_guid:
            type: string
            format: uuid
          program_guid:
            type: string
            format: uuid
          url:
            type: string
          headers:
            type: string
            nullable: true
          secret:
            type: string
            nullable: true
          active:
            type: boolean
            nullable: true
          event_type:
            type: array
            items:
              type: string
        additionalProperties: false
      NotificationConfigurationDTOSearchResponse:
        required:
        - count
        - data
        - end_index
        - has_more
        - start_index
        type: object
        properties:
          count:
            type: integer
            format: int32
          start_index:
            type: integer
            format: int32
          end_index:
            type: integer
            format: int32
          has_more:
            type: boolean
          data:
            type: array
            items:
              "$ref": "#/components/schemas/NotificationConfigurationDTO"
        additionalProperties: false
    securitySchemes:
      Bearer:
        type: http
        description: Enter JWT Bearer token **_only_**
        scheme: bearer
        bearerFormat: JWT
  security:
  - Bearer: []
  tags:
  - name: Introduction
    description: QoloPay provides RESTful based payments API.  It has predictable resource
      URLs.  It returns HTTP response codes to indicate errors.  It also accepts and
      returns JSON in the HTTP body.  You can use your favorite HTTP/REST library for
      your programming language to use Qolo API
  - name: Authentication
    description: QoloPay API uses Bearer Authentication to enforce authentication for
      all its incoming requests. Bearer Authentication (Token Authentication) is an
      HTTP authentication mechanism that involves security tokens generated by Qolo
      server. The calling server will make a login request to get the token and will
      pass this token on all subsequent calls as part of  the Authorization Header.  <br/>
      API access token can be generated by sending login_id and api_key to /api/v1/auth/login
      route.  The access token should be passed in subsequent API calls. If access token
      is not passed or expired access token is passed, then server will return 401 Unauthorized
      response.  Qolo API access token has a validity of 12 hours. When the access token
      expires, your application must request a new access token using the same /api/v1/auth/login
      route as before. The lifetime of the generated access token is 12  hours. <br/>
      <h3>Important considerations </h3> <ol> <li> API access tokens provide complete
      access to all data in your program.Token allows anybody who has them to access
      program resources So be careful where you store the access token and avoid unnecessary
      logging of the tokens.</li> <li> Do not request an access token for every API
      call.Tokens are valid for 12 hours and reusable.Also making 2 API calls for every
      operation is very inefficient. </li> </ol>
  - name: Errors
    description: QoloPay provides RESTful based payments API.  QoloPay API returns HTTP
      response codes to indicate status of the requests.  Following are the list of
      common http codes with descriptions<ul><li> 200 OK - Response to successful to
      GET and PUT methods and also used for POST that does not result in creation </li><li>
      201 Created - Response to successful POST that results in creation </li><li> 400
      Bad Request - Request has errors. Mostly request field validation errors </li><li>
      401 Unauthorized - When No or Invaild access token provided in header </li><li>
      404 Not Found - Resource with ID does not exist </li><li> 405 Method Not Allowed
      - Http method is not allowed for the API access token </li><li> 415 Unsupported
      Media Type </li><li> 429 Too Many Requests - When a request is rejected by API
      gateway due to rate limiting </li></ul>
  - name: Idempotent Requests
    description: Qolopay supports idempotency for safely retrying requests using header
      value called <b>IdempotencyKey</b>. For POST methods, creating resources(example:-/api/v1/cards)
      on Qolopay server, this header should contain a unique ID that the server stores
      for a period of time. We will use this header to enforce idempotency in REST API
      POST calls.Then you can invoke these calls any number of times without concern
      that the server creates resource more than once.
  - name: Versioning
    description: The API version is explicitly declared in the URL. For example our
      current version v1 is represented in url(https://serverurl/api/v1/cards).  At
      QoloPay, the API version will not be changed for non breaking changes such as
      adding new endpoints or adding new fields in response objects.  As an API consumer
      please ensure that your application gracefully handles addition of fields in the
      response objects.  For example, During JSON response handling make sure the framework
      does not throw any errors due to additional fields on the response object.
  - name: Webhook
    description: " API Partners can use webhooks to receive automated notifications
      about all the events of their programs in real time.  Rather than requiring to
      pull information via our API, this will push information to your URL when important
      events occur.  Webhooks are delivered via HTTPS POST to a configured URL on your
      server and your server should return Http status code 200 to acknowledge the receipt
      of the notification."
  - name: Persons
    description: Manage Persons
  - name: Cards
    description: Manage Cards
  - name: Wallets
    description: Manage Wallets
  - name: Accounts
    description: Manage Accounts
  - name: Reports
    description: Manage Report Requests
  - name: AccountInstruments
    description: Manage AccountInstruments
  - name: Instruments
    description: Manage Instruments
  - name: Transactions
    description: Manage Transactions
  - name: Transfers
    description: Manage Transfers
  - name: Webhooks
    description: Manage Webhooks
  